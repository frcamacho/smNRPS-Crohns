head(df)
data <- read_delim("~/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/combined-HMP2-IBD-metatranscriptomes-spanish-clusters-quantifier-results.txt", delim = "\t", col_names = F)
head(data)
colnames(data)<-c('bgcName', 'COVERAGE', 'RPKM', 'Sample')
data %>% filter(bgcName == "V1.UC61.0__NODE_930_length_26002_cov_3.77986__26002__nrps__ANTISMASH__0_26002" & Sample == "HSM5FZBQ")
rm(data)
data <- read_delim("~/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/combined-HMP2-IBD-metatranscriptomes-rainin-quantifier-results.txt, delim = "\t", col_names = F)
data <- read_delim("~/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/combined-HMP2-IBD-metatranscriptomes-rainin-quantifier-results.txt", delim = "\t", col_names = F)
head(data)
colnames(data)<-c('bgcName', 'COVERAGE', 'RPKM', 'Sample')
data %>% filter(COVERAGE >=50)
data %>% filter(COVERAGE >=10)
knitr::opts_chunk$set(echo = TRUE)
#load necessary packages
library(tidyverse)
library(ggsci)
library(psych)
library(reshape2)
library(ggpubr)
quantifier_df <- read_delim("combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
sample_metadata_metagenomes <- sample_metadata %>% filter(data_type == "metagenomics")
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata_metagenomes, by = c("Sample"="ExternalID"))
# retrieve BGC class from bgcName
dna_results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
############################
#Group BGC Class for figure
recode_bgcClass<-function(df){
PKS <- c("t2pks","transatpks","t1pks","lantipeptide-t2pks","otherks","otherks-transatpks")
NRPS <- c("nrps","nrps-bacteriocin","nrps-ladderane","ladderane-nrps","nrps-lantipeptide","arylpolyene-nrps")
Terpene <- "terpene"
hybrid_pks_nrps<- c("nrps-t1pks","transatpks-otherks-nrps")
Others <- c("arylpolyene","other", "resorcinol","butyrolactone", "ladderane", "siderophore", "hserlactone", "bacteriocin-arylpolyene","amglyccycl","ladderane-arylpolyene")
RiPPs <- c("microcin","bacteriocin","lantipeptide","lassopeptide","bacteriocin-lantipeptide","sactipeptide", "thiopeptide","bacteriocin-proteusin", "glycocin","microcin-lassopeptide")
df$bgcClass[df$bgcClass %in% PKS ==TRUE] <- "PKS"
df$bgcClass[df$bgcClass %in% NRPS ==TRUE] <- "NRPS"
df$bgcClass[df$bgcClass == Terpene] <- "Terpene"
df$bgcClass[df$bgcClass %in% hybrid_pks_nrps ==TRUE] <- "Hybrid PKS-NRPS"
df$bgcClass[df$bgcClass %in% Others ==TRUE] <- "Others"
df$bgcClass[df$bgcClass %in% RiPPs ==TRUE] <- "RiPPs"
return(df)
}
hmp2_metagenomes_filtered_results<-recode_bgcClass(dna_results_df)
species_df <- read_csv("species_results-HMP2-IBD_UniProt.csv", col_names = T)
setwd("/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/HMP2-IBD")
setwd("/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/HMP2-IBD")
species_df <- read_csv("species_results-HMP2-IBD_UniProt.csv", col_names = T)
setwd('/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/HMP2-IBD')
#cultured bacteria vs uncultivated bacteria pie chart
setwd('/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/HMP2-IBD/species-profiler-results/')
setwd('/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/HMP2-IBD')
species_df <- read_csv("species-profiler-result/species_results-HMP2-IBD_UniProt.csv", col_names = T)
species_df <- read_csv("/species-profiler-result/species_results-HMP2-IBD_UniProt.csv", col_names = T)
species_df <- read_csv("species-profiler-results/species_results-HMP2-IBD_UniProt.csv", col_names = T)
species_df[is.na(species_df)]<-"N/A"
species_df$PHYLUM <- ifelse(species_df$PHYLUM == "N/A", species_df$Manual_PHYLUM, species_df$PHYLUM)
species_df$ORGANISM <- ifelse(species_df$ORGANISM == "N/A", species_df$Manual_ORGANISM, species_df$ORGANISM)
#############################
#cultured bacteria vs uncultivated bacteria pie chart
species_df <- read_csv("species-profiler-results/species_results-HMP2-IBD_UniProt.csv", col_names = T)
species_df[is.na(species_df)]<-"N/A"
species_df$PHYLUM <- ifelse(species_df$PHYLUM == "N/A", species_df$Manual_PHYLUM, species_df$PHYLUM)
species_df$ORGANISM <- ifelse(species_df$ORGANISM == "N/A", species_df$Manual_ORGANISM, species_df$ORGANISM)
species_df$PHYLUM[species_df$PHYLUM == "N/A" ] <-"Unassigned"
species_df_bgc_class <-species_df %>% separate(., BGC_NAME,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
species_recoded_bgc_results<-recode_bgcClass(species_df_bgc_class)
species_recoded_bgc_results %>% group_by(PHYLUM,bgcClass) %>% count() %>% ggplot(.,aes(reorder(PHYLUM, n), n)) + geom_col(aes(fill = bgcClass)) + scale_fill_npg() + coord_flip()+ theme_bw()
species_recoded_bgc_results %>% group_by(PHYLUM) %>% count() %>% ggplot(.,aes(reorder(PHYLUM, n), n)) + geom_col() + scale_fill_npg() + coord_flip()+ theme_bw() + xlab("Phyla") + ylab("Total BGCs detected") +geom_text(aes(label=n), vjust=0,hjust=-.5)
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
calculate_hitRatio_byPart <-function(data, metadata){
metadata_counts<- metadata %>% group_by(ParticipantID,GroupAttribute) %>% count() %>% ungroup() %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute,ParticipantID) %>% count() %>% ungroup() %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$nn
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (nn/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
#hitratio by samples and not participant
hmp2_metagenome_hitratio <- calculate_hitRatio(hmp2_metagenomes_filtered_results, sample_metadata_metagenomes)
hmp2_metagenome_hitratiobyPart <- calculate_hitRatio_byPart(hmp2_metagenomes_filtered_results, sample_metadata_metagenomes)
################################################
bar_plot_per_cluster<- function(df, cluster){
plot_title <- paste0(cluster, "-","barplot",".eps")
df %>% filter(bgcName == cluster) %>% group_by(GroupAttribute) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>%  ggplot(., aes(Sample,RPKM)) + geom_col()+geom_hline(aes(yintercept=ymedian), color="red", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="red", linetype="solid")+theme_pubclean()+ facet_grid(~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + ggtitle(cluster) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24"))
ggsave(plot_title, width = 11, height = 5, units = "in", device = "eps")
}
reorder_within <- function(x, by, within, fun = mean, sep = "___", ...) {
new_x <- paste(x, within, sep = sep)
stats::reorder(new_x, by, FUN = fun)
}
scale_x_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_x_discrete(labels = function(x) gsub(reg, "", x), ...)
}
scale_y_reordered <- function(..., sep = "___") {
reg <- paste0(sep, ".+$")
ggplot2::scale_y_discrete(labels = function(x) gsub(reg, "", x), ...)
}
########
#figure for BGC cclass total molecules detected in each samples in each cohort # remove other group
hmp2_metagenomes_filtered_results %>% filter(GroupAttribute!= "Other") %>% group_by(GroupAttribute,bgcClass) %>% count(Sample) %>% ggplot(.,aes(reorder_within(Sample, n, GroupAttribute), n)) + geom_col(aes(fill = bgcClass)) + scale_fill_npg()+ facet_grid(~GroupAttribute, switch = "x", scales = "free_x", space = "free_x") + scale_x_reordered()+
theme(panel.spacing = unit(0, "lines"),
strip.background = element_blank()) + xlab("Disease Status")+ ylab("Total BGCs detected") + theme_bw() + theme(axis.text.x = element_blank(),axis.ticks.x = element_blank())
#########
hmp2_metagenomes_filtered_results %>% filter(GroupAttribute!= "Other") %>% group_by(GroupAttribute,bgcClass) %>% count(Sample) %>% ggplot(.,aes(reorder_within(Sample, n, GroupAttribute), n)) + geom_col(aes(fill = bgcClass)) + scale_fill_npg()+ facet_grid(~GroupAttribute, switch = "x", scales = "free_x", space = "free_x") + scale_x_reordered()+
theme(panel.spacing = unit(0, "lines"),
strip.background = element_blank()) + xlab("Disease Status")+ ylab("Total BGCs detected") + theme_bw() + theme(axis.text.x = element_blank(),axis.ticks.x = element_blank())
#########
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggsci)
library(psych)
library(reshape2)
library(ggpubr)
setwd("/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data")
setwd("/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data")
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata, by = "Sample")
# retrieve BGC class from bgcName
results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
spanish_hitratio <- calculate_hitRatio(spanish_filtered_results, sample_metadata)
#load quantifier data
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata, by = "Sample")
# retrieve BGC class from bgcName
results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
############################
#Group BGC Class for figure
recode_bgcClass<-function(df){
PKS <- c("t2pks","transatpks","t1pks","lantipeptide-t2pks","otherks","otherks-transatpks")
NRPS <- c("nrps","nrps-bacteriocin","nrps-ladderane","ladderane-nrps","nrps-lantipeptide","arylpolyene-nrps")
Terpene <- "terpene"
hybrid_pks_nrps<- c("nrps-t1pks","transatpks-otherks-nrps")
Others <- c("arylpolyene","other", "resorcinol","butyrolactone", "ladderane", "siderophore", "hserlactone", "bacteriocin-arylpolyene","amglyccycl","ladderane-arylpolyene")
RiPPs <- c("microcin","bacteriocin","lantipeptide","lassopeptide","bacteriocin-lantipeptide","sactipeptide", "thiopeptide","bacteriocin-proteusin", "glycocin","microcin-lassopeptide")
df$bgcClass[df$bgcClass %in% PKS ==TRUE] <- "PKS"
df$bgcClass[df$bgcClass %in% NRPS ==TRUE] <- "NRPS"
df$bgcClass[df$bgcClass == Terpene] <- "Terpene"
df$bgcClass[df$bgcClass %in% hybrid_pks_nrps ==TRUE] <- "Hybrid PKS-NRPS"
df$bgcClass[df$bgcClass %in% Others ==TRUE] <- "Others"
df$bgcClass[df$bgcClass %in% RiPPs ==TRUE] <- "RiPPs"
return(df)
}
spanish_filtered_results<-recode_bgcClass(results_df)
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
spanish_hitratio <- calculate_hitRatio(spanish_filtered_results, sample_metadata)
######
max(spanish_hitratio$hitRatio)
spanish_hitratio %>% filter(GroupAttribute == "C") %>% arrange(desc(hitRatio))
#load quantifier data
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata, by = "Sample")
# retrieve BGC class from bgcName
results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
############################
#Group BGC Class for figure
recode_bgcClass<-function(df){
PKS <- c("t2pks","transatpks","t1pks","lantipeptide-t2pks","otherks","otherks-transatpks")
NRPS <- c("nrps","nrps-bacteriocin","nrps-ladderane","ladderane-nrps","nrps-lantipeptide","arylpolyene-nrps")
Terpene <- "terpene"
hybrid_pks_nrps<- c("nrps-t1pks","transatpks-otherks-nrps")
Others <- c("arylpolyene","other", "resorcinol","butyrolactone", "ladderane", "siderophore", "hserlactone", "bacteriocin-arylpolyene","amglyccycl","ladderane-arylpolyene")
RiPPs <- c("microcin","bacteriocin","lantipeptide","lassopeptide","bacteriocin-lantipeptide","sactipeptide", "thiopeptide","bacteriocin-proteusin", "glycocin","microcin-lassopeptide")
df$bgcClass[df$bgcClass %in% PKS ==TRUE] <- "PKS"
df$bgcClass[df$bgcClass %in% NRPS ==TRUE] <- "NRPS"
df$bgcClass[df$bgcClass == Terpene] <- "Terpene"
df$bgcClass[df$bgcClass %in% hybrid_pks_nrps ==TRUE] <- "Hybrid PKS-NRPS"
df$bgcClass[df$bgcClass %in% Others ==TRUE] <- "Others"
df$bgcClass[df$bgcClass %in% RiPPs ==TRUE] <- "RiPPs"
return(df)
}
spanish_filtered_results<-recode_bgcClass(results_df)
species_df <- read_csv("species-profiler-results/species_results-MetaHIT-spanish_UniProt.csv", col_names = T)
species_df[is.na(species_df)]<-"N/A"
species_df$PHYLUM <- ifelse(species_df$PHYLUM == "N/A", species_df$Manual_PHYLUM, species_df$PHYLUM)
species_df$ORGANISM <- ifelse(species_df$ORGANISM == "N/A", species_df$Manual_ORGANISM, species_df$ORGANISM)
species_df$PHYLUM[species_df$PHYLUM == "N/A" ] <-"Unassigned"
species_df_bgc_class <-species_df %>% separate(., BGC_NAME,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
species_recoded_bgc_results<-recode_bgcClass(species_df_bgc_class)
species_recoded_bgc_results %>% group_by(PHYLUM,bgcClass) %>% count() %>% ggplot(.,aes(reorder(PHYLUM, n), n)) + geom_col(aes(fill = bgcClass)) + scale_fill_npg() + coord_flip()+ theme_bw()
ggsave("BGC-counts-perclass_Phyla-barplot.eps", width = 7.3, height = 6.31, units = "in", device = "eps")
species_recoded_bgc_results %>% group_by(PHYLUM) %>% count() %>% ggplot(.,aes(reorder(PHYLUM, n), n)) + geom_col() + scale_fill_npg() + coord_flip()+ theme_bw() + xlab("Phyla") + ylab("Total BGCs detected") +geom_text(aes(label=n), vjust=0,hjust=-.5)
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
spanish_hitratio <- calculate_hitRatio(spanish_filtered_results, sample_metadata)
################################################
#Quanitfication of the exact CB and CC clusters for MetaHIT
rainin_df <- read_delim("combined-MetaHIT_Gut-rainin-quantifier-results.txt", delim = "\t",col_names = FALSE)%>%filter(X2 >= 50) %>% inner_join(., sample_metadata, by = c("X4"="Sample"))
names(rainin_df)[1:4] <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin_df_hitratio <- calculate_hitRatio(rainin_df, sample_metadata)
prepare_rainin_data <- function(df, metadata_df){
missingsamples<- metadata_df %>% filter(!Sample %in% df$Sample)
df_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
i<-1
for (i in 1:nrow(missingsamples)){
sample_col <- missingsamples[i,]$Sample
df_wide[, sample_col]<-NA
i<- i+1
}
df_wide[is.na(df_wide)] <- 0
df_melt <- melt(df_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(df_melt)[2]<-"Sample"
names(df_melt)[3]<-"RPKM"
return(df_melt)
}
rainin_df_update<- prepare_rainin_data(rainin_df, sample_metadata)
head(rainin_df_update)
rainin_df_update %>% group_by(GroupAttribute) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>%  ggplot(., aes(Sample,RPKM)) + geom_col()+geom_hline(aes(yintercept=ymedian), color="red", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="red", linetype="solid")+theme_pubclean()+ facet_grid(~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + ggtitle(cluster) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24"))
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute,bgcName) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>%  ggplot(., aes(Sample,RPKM)) + geom_col()+geom_hline(aes(yintercept=ymedian), color="red", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="red", linetype="solid")+theme_pubclean()+ facet_grid(~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24"))
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute,bgcName) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>%  ggplot(., aes(Sample,RPKM)) + geom_col()+geom_hline(aes(yintercept=ymedian), color="red", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="red", linetype="solid")+theme_pubclean()+ facet_grid(bgcName~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24"))
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute,bgcName) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>% head()
describeBy(rainin_df_update %>% filter(bgcName == "smNRPS-CB"), group = "GroupAttribute" )
describeBy(rainin_df_update %>% filter(bgcName == "smNRPS-CC"), group = "GroupAttribute" )
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute,bgcName) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>% distinct(bgcName, ymean, ymedian)
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% arrange(desc(RPKM))
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute,bgcName) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>%  ggplot(., aes(Sample,RPKM)) + geom_col()+geom_hline(aes(yintercept=ymedian), color="red", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="red", linetype="solid")+theme_pubclean()+ facet_grid(bgcName~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24"))
ggsave("combined-smNRPS-MetaHIT-barplot.eps", width = 11, height = 5, units = "in", device = "eps")
require(tidyverse)
prepare_data<-function(df, metadata_df){
data_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
data_wide[is.na(data_wide)] <- 0
data_melt <- melt(data_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(data_melt)[2]<-"Sample"
names(data_melt)[3]<-"RPKM"
return(data_melt)
}
quantifier_results_DNA <- read_delim("combined-HMP2-IBD-metagenomes-spanish-clusters-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
head(quantifier_results_DNA)
rm(quantifier_results_DNA)
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
quantifier_df_updated <- prepare_data(quantifier_df, sample_metadata)
head(quantifier_df_updated)
table(quantifier_df_updated$Sample, quantifier_df_updated$GroupAttribute)
table(quantifier_df_updated$Sample, quantifier_df_updated$GroupAttribute) %>% dim()
require(tidyverse)
load("format_data_for_lefse.R")
require(tidyverse)
load("format_data_for_lefse.R")
prepare_data<-function(df, metadata_df){
data_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
data_wide[is.na(data_wide)] <- 0
data_melt <- melt(data_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(data_melt)[2]<-"Sample"
names(data_melt)[3]<-"RPKM"
return(data_melt)
}
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
quantifier_df_updated <- prepare_data(quantifier_df, sample_metadata)
require(tidyverse)
source("format_data_for_lefse.R")
prepare_data<-function(df, metadata_df){
data_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
data_wide[is.na(data_wide)] <- 0
data_melt <- melt(data_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(data_melt)[2]<-"Sample"
names(data_melt)[3]<-"RPKM"
return(data_melt)
}
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
quantifier_df_updated <- prepare_data(quantifier_df, sample_metadata)
quantifier_df_updated_raw_table<-format_data_for_lefse(quantifier_df_updated)
head(quantifier_df_updated_raw_table)
require(tidyverse)
source("format_data_for_lefse.R")
prepare_data<-function(df, metadata_df){
data_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
data_wide[is.na(data_wide)] <- 0
data_melt <- melt(data_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(data_melt)[2]<-"Sample"
names(data_melt)[3]<-"RPKM"
return(data_melt)
}
#############################################################
#load quantifier data
metahit_quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(metahit_quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_metahit_quantifier_df <- metahit_quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
metahit_sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
quantifier_df_updated <- prepare_data(filter_metahit_quantifier_df, metahit_sample_metadata)
rm(quantifier_df_updated)
head(metahit_results)
require(tidyverse)
source("format_data_for_lefse.R")
prepare_data<-function(df, metadata_df){
data_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
data_wide[is.na(data_wide)] <- 0
data_melt <- melt(data_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(data_melt)[2]<-"Sample"
names(data_melt)[3]<-"RPKM"
return(data_melt)
}
#############################################################
#load quantifier data
metahit_quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(metahit_quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_metahit_quantifier_df <- metahit_quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
metahit_sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
metahit_results<- prepare_data(filter_metahit_quantifier_df, metahit_sample_metadata)
metahit_results_raw_table<-format_data_for_lefse(metahit_results) #filtered at 50% coverage
head(metahit_results_raw_table)
write_csv(metahit_results_raw_table, "MetaHIT-Gut_abundance-table.csv",col_names = T)
hmp2_metagenomes_quantifier_df <- read_delim("HMP2-IBD/combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(hmp2_metagenomes_quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_hmp2_metagenomes_quantifier_df <- hmp2_metagenomes_quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
hmp2_sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(hmp2_sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
hmp2_sample_metadata_metagenomes <- sample_metadata %>% filter(data_type == "metagenomics")
hmp2_metagenomes_quantifier_df <- read_delim("HMP2-IBD/combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(hmp2_metagenomes_quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_hmp2_metagenomes_quantifier_df <- hmp2_metagenomes_quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
hmp2_sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(hmp2_sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
hmp2_sample_metadata_metagenomes <- hmp2_sample_metadata %>% filter(data_type == "metagenomics")
hmp2_results<- prepare_data(filter_hmp2_metagenomes_quantifier_df, hmp2_sample_metadata_metagenomes)
prepare_data_hmp2<-function(df, metadata_df){
data_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
data_wide[is.na(data_wide)] <- 0
data_melt <- melt(data_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="ExternalID") )
names(data_melt)[2]<-"Sample"
names(data_melt)[3]<-"RPKM"
return(data_melt)
}
hmp2_metagenomes_quantifier_df <- read_delim("HMP2-IBD/combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(hmp2_metagenomes_quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_hmp2_metagenomes_quantifier_df <- hmp2_metagenomes_quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
hmp2_sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(hmp2_sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
hmp2_sample_metadata_metagenomes <- hmp2_sample_metadata %>% filter(data_type == "metagenomics")
hmp2_results<- prepare_data(filter_hmp2_metagenomes_quantifier_df, hmp2_sample_metadata_metagenomes)
head(filter_hmp2_metagenomes_quantifier_df)
head(hmp2_sample_metadata_metagenomes)
hmp2_metagenomes_quantifier_df <- read_delim("HMP2-IBD/combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(hmp2_metagenomes_quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_hmp2_metagenomes_quantifier_df <- hmp2_metagenomes_quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
hmp2_sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(hmp2_sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
hmp2_sample_metadata_metagenomes <- hmp2_sample_metadata %>% filter(data_type == "metagenomics")
hmp2_results<- prepare_data_hmp2(filter_hmp2_metagenomes_quantifier_df, hmp2_sample_metadata_metagenomes)
head(hmp2_results)
unique(hmp2_results$GroupAttribute)
hmp2_metagenomes_quantifier_df <- read_delim("HMP2-IBD/combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(hmp2_metagenomes_quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_hmp2_metagenomes_quantifier_df <- hmp2_metagenomes_quantifier_df %>% filter(Coverage >= 50)  %>% filter(GroupAttribute!="Other") # filter by coverage and Other
hmp2_sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(hmp2_sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
hmp2_sample_metadata_metagenomes <- hmp2_sample_metadata %>% filter(data_type == "metagenomics")
hmp2_results<- prepare_data_hmp2(filter_hmp2_metagenomes_quantifier_df, hmp2_sample_metadata_metagenomes)
hmp2_results$GroupAttribute[hmp2_results$GroupAttribute == "Crohn's Disease"]<-"CD"
hmp2_results$GroupAttribute[hmp2_results$GroupAttribute == "Ulcerative colitis"]<-"UC"
hmp2_results$GroupAttribute[hmp2_results$GroupAttribute == "Healthy control"]<-"C"
require(tidyverse)
source("format_data_for_lefse.R")
prepare_data<-function(df, metadata_df){
data_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
data_wide[is.na(data_wide)] <- 0
data_melt <- melt(data_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(data_melt)[2]<-"Sample"
names(data_melt)[3]<-"RPKM"
return(data_melt)
}
prepare_data_hmp2<-function(df, metadata_df){
data_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
data_wide[is.na(data_wide)] <- 0
data_melt <- melt(data_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="ExternalID") )
names(data_melt)[2]<-"Sample"
names(data_melt)[3]<-"RPKM"
return(data_melt)
}
#############################################################
#load quantifier data
metahit_quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(metahit_quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_metahit_quantifier_df <- metahit_quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
metahit_sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
metahit_results<- prepare_data(filter_metahit_quantifier_df, metahit_sample_metadata)
metahit_results_raw_table<-format_data_for_lefse(metahit_results) #filtered at 50% coverage
write_csv(metahit_results_raw_table, "MetaHIT-Gut_abundance-table.csv",col_names = T)
hmp2_metagenomes_quantifier_df <- read_delim("HMP2-IBD/combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(hmp2_metagenomes_quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_hmp2_metagenomes_quantifier_df <- hmp2_metagenomes_quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
hmp2_sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(hmp2_sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
hmp2_sample_metadata_metagenomes <- hmp2_sample_metadata %>% filter(data_type == "metagenomics")
hmp2_results<- prepare_data_hmp2(filter_hmp2_metagenomes_quantifier_df, hmp2_sample_metadata_metagenomes) %>% filter(GroupAttribute != "Other")
hmp2_results$GroupAttribute[hmp2_results$GroupAttribute == "Crohn's Disease"]<-"CD"
hmp2_results$GroupAttribute[hmp2_results$GroupAttribute == "Ulcerative colitis"]<-"UC"
hmp2_results$GroupAttribute[hmp2_results$GroupAttribute == "Healthy control"]<-"C"
unique(hmp2_results$GroupAttribute)
head(hmp2_results)
hmp2_results_raw_table<-format_data_for_lefse(hmp2_results)
head(hmp2_results_raw_table)
write_csv(hmp2_results_raw_table, "HMP2-IBD_abundance-table.csv",col_names = T)
quantifier_df <- read_delim("combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
sample_metadata_metagenomes <- sample_metadata %>% filter(data_type == "metagenomics")
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata_metagenomes, by = c("Sample"="ExternalID"))
# retrieve BGC class from bgcName
dna_results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
unique(dna_results_df$bgcClass)
quantifier_df <- read_delim("combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
sample_metadata_metagenomes <- sample_metadata %>% filter(data_type == "metagenomics")
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata_metagenomes, by = c("Sample"="ExternalID"))
# retrieve BGC class from bgcName
dna_results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
recode_bgcClass<-function(df){
PKS <- c("t2pks","transatpks","t1pks","lantipeptide-t2pks","otherks","otherks-transatpks", "otherks-t1pks")
NRPS <- c("nrps","nrps-bacteriocin","nrps-ladderane","ladderane-nrps","nrps-lantipeptide","arylpolyene-nrps")
Terpene <- "terpene"
hybrid_pks_nrps<- c("nrps-t1pks","transatpks-otherks-nrps")
Others <- c("arylpolyene","other", "resorcinol","butyrolactone", "ladderane", "siderophore", "hserlactone", "bacteriocin-arylpolyene","amglyccycl","ladderane-arylpolyene","phenazine")
RiPPs <- c("microcin","bacteriocin","lantipeptide","lassopeptide","bacteriocin-lantipeptide","sactipeptide", "thiopeptide","bacteriocin-proteusin", "glycocin","microcin-lassopeptide","proteusin-bacteriocin")
df$bgcClass[df$bgcClass %in% PKS ==TRUE] <- "PKS"
df$bgcClass[df$bgcClass %in% NRPS ==TRUE] <- "NRPS"
df$bgcClass[df$bgcClass == Terpene] <- "Terpene"
df$bgcClass[df$bgcClass %in% hybrid_pks_nrps ==TRUE] <- "Hybrid PKS-NRPS"
df$bgcClass[df$bgcClass %in% Others ==TRUE] <- "Others"
df$bgcClass[df$bgcClass %in% RiPPs ==TRUE] <- "RiPPs"
return(df)
}
hmp2_metagenomes_filtered_results<-recode_bgcClass(dna_results_df)
quantifier_df <- read_delim("combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
dim(quantifier_df)
