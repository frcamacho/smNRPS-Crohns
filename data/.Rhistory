test<-hmp2_metadata_dna %>% full_join(.,rainin.exact_results_DNA_filter, by = c("ExternalID" = "Sample")) %>% filter(diagnosis == "CD" | diagnosis == "nonIBD")
head(test)
test %>% filter(is.na(fecalcal) & !is.na(bgcName))
test %>% filter(is.na(bgcName) & !is.na(fecalcal))
test %>% filter(ExternalID == "CSM5FZ3V")
smNRPS_absent<-test %>% filter(is.na(bgcName) & !is.na(fecalcal))
smNRPS_absent$smNRPS<- "Absent"
head(smNRPS_absent)
test_c<-test %>% group_by(bgcName,ExternalID) %>% count()
head(test_c)
test_c %>% filter(n <1)
smNRPS_present <- test %>% filter(ExternalID %in% test_c$ExternalID)
head(smNRPS_present)
tail(smNRPS_present)
test_c %>% filter(ExternalID == "PSMA266M")
test_c<-test %>% group_by(bgcName,ExternalID) %>% filter(!is.na(bgcName)) %>%count()
unique(test_c$ExternalID) %>% length()
unique(smNRPS_absent$ExternalID) %>% length()
unique(test$ExternalID)
unique(test$ExternalID) %>% length()
head(smNRPS_present)
tail(smNRPS_present)
hmp2_metadata_dna<- read_csv("HMP2-IBD/hmp2_metadata_downloaded_09_14_2018.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis, fecalcal) %>%
filter(data_type == "metagenomics")
names(hmp2_metadata_dna)[1:2] <- c("ExternalID", "ParticipantID")
hmp2_metadata_dna <- hmp2_metadata_dna%>% separate(., ExternalID, into = c("ExternalID", "extra"), sep = "_") %>% select(-c(extra))
rainin.exact_results_DNA <- read_delim("HMP2-IBD/smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA_filter <- rainin.exact_results_DNA %>% filter(Coverage >=50)
smnrps_c_cd<-hmp2_metadata_dna %>% full_join(.,rainin.exact_results_DNA_filter, by = c("ExternalID" = "Sample")) %>% filter(diagnosis == "CD" | diagnosis == "nonIBD")
head(smnrps_c_cd)
tail(smnrps_c_cd)
test %>% filter(is.na(bgcName) & !is.na(fecalcal))
smNRPS_present <- smnrps_c_cd %>% filter(!is.na(fecalcal) & !is.na(bgcName))
tail(smNRPS_present)
head(smNRPS_present)
smNRPS_present
unique(smNRPS_present$ExternalID)
smNRPS_present$smNRPS <- "Present"
smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present) %>% filter(!is.na(fecalcal))
smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$fecalcal) %>% filter(!is.na(fecalcal))
smNRPS_present %>% filter(ExternalID == "CSM5FZ3N")
head(smnrps_c_cd)
smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal))
smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal)) %>% tail(.)
smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal)) %>% dim()
smNRPS_absent<-smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal))
smNRPS_absent$smNRPS<- "Absent"
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent)
head(smNRPS_data)
head(smNRPS_data)
table(smNRPS_data$smNRPS)
unique(smNRPS_present$ExternalID)
unique(smNRPS_present$ExternalID) %>% length()
unique(smNRPS_absent$ExternalID) %>% length()
test <-smnrps_c_cd %>% filter(!is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
head(test)
head(test)
test <-smnrps_c_cd %>% filter(!is.na(fecalcal) & is.na(bgcName))
test
test <-smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
head(test)
smNRPS_data %>% filter(ExternalID == "CSM5MCW4")
unique(test$ExternalID) %>% length()
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
test<-smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
unique(test$ExternalID) %>% length()
test
tail(test)
817 +286+11+37
rm(test)
head(smNRPS_data)
smNRPS_absent
smNRPS_data %>% filter(ExternalID == "CSM5FZ3V")
smnrps_c_cd %>% filter(ExternalID == "CSM5FZ3V")
smnrps_c_cd %>% filter(ExternalID == "CSM5FZ3V")
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal))
+ geom_boxplot(outlier.colour = "red")
+ geom_jitter(width = 0.1, alpha = 0.25)
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal)) + geom_boxplot(outlier.colour = "red") + geom_jitter(width = 0.1, alpha = 0.25)
head(smNRPS_data)
tbale(smNRPS_data$smNRPS)
table(smNRPS_data$smNRPS)
analysis_hmp2_dna<- read_csv("HMP2-IBD/hmp2_project_metadata_2016-10-15.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis, fecalcal) %>%
filter(data_type == "metagenomics")
analysis_hmp2_dna<- read_csv("HMP2-IBD/hmp2_project_metadata_2016-10-15.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis) %>%
filter(data_type == "metagenomics")
smNRPS_data %>% head(analysis_hmp2_dna)
head(analysis_hmp2_dna)
names(analysis_hmp2_dna)[1:2] <- c("ExternalID", "ParticipantID")
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent) %>% filter(ExternalID %in% analysis_hmp2_dna$ExternalID)
table(smNRPS_data$smNRPS)
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal)) + geom_boxplot(outlier.colour = "red") + geom_jitter(width = 0.1, alpha = 0.25)
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal), color = diagnosis) + geom_boxplot() + geom_jitter(width = 0.1, alpha = 0.25)
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal)) + geom_boxplot(color = diagnosis) + geom_jitter(width = 0.1, alpha = 0.25)
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal)) + geom_boxplot( aes( color= diagnosis)) + geom_jitter(width = 0.1, alpha = 0.25)
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal)) + geom_boxplot( aes( fill= diagnosis)) + geom_jitter(width = 0.1, alpha = 0.25)
ggplot(smNRPS_data, aes(x = diagnosis, y = fecalcal)) + geom_boxplot( ) + geom_jitter(width = 0.1, alpha = 0.25) + facet_wrap(~smNRPS)
smNRPS_data %>% filter(fecalcal > 180 )
smNRPS_data %>% filter(fecalcal > 180 ) %>% filter(smNRPS == "Absent")
rainin.exact_results_DNA_filter %>% filter(Sample == "ESM5MEDZ")
rainin.exact_results_DNA %>% filter(Sample == "ESM5MEDZ")
rainin.exact_results_DNA %>% filter(Sample == "ESM5MEE2")
rainin.exact_results_DNA %>% filter(Sample == "HSM5MD5H")
rainin.exact_results_DNA %>% filter(Sample == "HSM5MD7W")
rainin.exact_results_DNA %>% filter(Sample == "ESM5MEBP")
analysis_hmp2_dna %>% filter(Sample == "ESM5MEBP")
analysis_hmp2_dna %>% filter(ExternalID == "ESM5MEBP")
smNRPS_data %>% filter(fecalcal > 180 ) %>% filter(smNRPS == "Absent") %>% as.data.frame()
analysis_hmp2_dna %>% filter(ExternalID == "HSM5MD4P")
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal)) + geom_violin(adjust=1.2)+ geom_jitter(width=0.2, alpha=0.5)
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal)) + geom_violin(adjust=1.2)+ geom_jitter(width=0.2, alpha=0.5)+ facet_wrap(~smNRPS)
ggplot(smNRPS_data, aes(x = diagnosis, y = fecalcal)) + geom_violin(adjust=1.2)+ geom_jitter(width=0.2, alpha=0.5)+ facet_wrap(~smNRPS)
ggplot(smNRPS_data, aes(x = diagnosis, y = fecalcal)) + geom_boxplot() + geom_jitter(width = 0.1, alpha = 0.25) + facet_wrap(~smNRPS)
#
cor(smNRPS_data$fecalcal, smNRPS_data$RPKM, method="spearman")
head(smNRPS_data)
smNRPS_data$fecalcal
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
library("ggpubr")
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "smNRPS RPKM", ylab = "fecalcal")
head(smNRPS_data)
smNRPS_data$RPKM
ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "smNRPS RPKM", ylab = "fecalcal")
ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
cor.test(smNRPS_data$fecalcal, smNRPS_data$RPKM,  method = "spearman")
cor.test(smNRPS_data$fecalcal, smNRPS_data$RPKM,  method = "spearman",exact=FALSE)
cor.test(smNRPS_data$fecalcal, smNRPS_data$RPKM,  method = "spearman",exact=FALSE)
cor.test(smNRPS_data$fecalcal, smNRPS_data$RPKM,method="kendall")
shapiro.test(smNRPS_data$fecalcal)
shapiro.test(smNRPS_data$RPKM)
hmp2_metadata_dna<- read_csv("HMP2-IBD/hmp2_metadata_downloaded_09_14_2018.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis, fecalcal) %>%
filter(data_type == "metagenomics")
names(hmp2_metadata_dna)[1:2] <- c("ExternalID", "ParticipantID")
hmp2_metadata_dna <- hmp2_metadata_dna%>% separate(., ExternalID, into = c("ExternalID", "extra"), sep = "_") %>% select(-c(extra))
analysis_hmp2_dna<- read_csv("HMP2-IBD/hmp2_project_metadata_2016-10-15.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis) %>%
filter(data_type == "metagenomics")
names(analysis_hmp2_dna)[1:2] <- c("ExternalID", "ParticipantID")
rainin.exact_results_DNA <- read_delim("HMP2-IBD/smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA_filter <- rainin.exact_results_DNA %>% filter(Coverage >=50)
smnrps_c_cd<-hmp2_metadata_dna %>% full_join(.,rainin.exact_results_DNA_filter, by = c("ExternalID" = "Sample"))
head(smnrps_c_cd)
smNRPS_present <- smnrps_c_cd %>% filter(!is.na(fecalcal) & !is.na(bgcName))
smNRPS_present$smNRPS <- "Present"
unique(smNRPS_present$ExternalID) %>% length()
smNRPS_absent<-smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal)) #286
smNRPS_absent$smNRPS<- "Absent"
unique(smNRPS_absent$ExternalID) %>% length()
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent) %>% filter(ExternalID %in% analysis_hmp2_dna$ExternalID)
ggplot(smNRPS_data, aes(x = diagnosis, y = fecalcal)) + geom_boxplot() + geom_jitter(width = 0.1, alpha = 0.25) + facet_wrap(~smNRPS)
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
res2 <-cor.test(smNRPS_data$fecalcal, smNRPS_data$RPKM,  method = "spearman")
res2
res2
res2 <-cor.test(smNRPS_data$fecalcal, smNRPS_data$RPKM,  method = "kendall")
res2
ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
dim(smNRPS_data)
unique(smNRPS_data$ExternalID) %>% length()
head(smNRPS_data)
smNRPS_data %>% filter(duplicated(ExternalID))
smNRPS_data %>% filter(ExternalID == "CSM5FZ3N")
ggscatter(smNRPS_data, x = fecalcal, y = RPKM,
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
head(smNRPS_data)
cor.test(log2(smNRPS_data$fecalcal), log2(smNRPS_data$RPKM),  method = "kendall")
package.version("tidyverse", lib.loc = NULL)
package.version("tidyverse")
utils::sessionInfo(), b
utils::sessionInfo()
library(reshape2)
utils::sessionInfo()
library("pheatmap")
utils::sessionInfo()
hmp2_metadata_dna<- read_csv("HMP2-IBD/hmp2_metadata_downloaded_09_14_2018.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis, fecalcal) %>%
filter(data_type == "metagenomics")
names(hmp2_metadata_dna)[1:2] <- c("ExternalID", "ParticipantID")
hmp2_metadata_dna <- hmp2_metadata_dna%>% separate(., ExternalID, into = c("ExternalID", "extra"), sep = "_") %>% select(-c(extra))
analysis_hmp2_dna<- read_csv("HMP2-IBD/hmp2_project_metadata_2016-10-15.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis) %>%
filter(data_type == "metagenomics")
names(analysis_hmp2_dna)[1:2] <- c("ExternalID", "ParticipantID")
rainin.exact_results_DNA <- read_delim("HMP2-IBD/smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA_filter <- rainin.exact_results_DNA %>% filter(Coverage >=50)
smnrps_c_cd<-hmp2_metadata_dna %>% full_join(.,rainin.exact_results_DNA_filter, by = c("ExternalID" = "Sample"))
#%>% filter(diagnosis == "CD" | diagnosis == "nonIBD")
smNRPS_present <- smnrps_c_cd %>% filter(!is.na(fecalcal) & !is.na(bgcName)) #37 samples; 42
smNRPS_present$smNRPS <- "Present"
smNRPS_absent<-smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal)) #286; 404
smNRPS_absent$smNRPS<- "Absent"
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent) %>% filter(ExternalID %in% analysis_hmp2_dna$ExternalID)
ggplot(smNRPS_data, aes(x = smNRPS, y = fecalcal)) + geom_boxplot(outlier.colour = "red") + geom_jitter(width = 0.1, alpha = 0.25)
ggplot(smNRPS_data, aes(x = diagnosis, y = fecalcal)) + geom_boxplot() + geom_jitter(width = 0.1, alpha = 0.25) + facet_wrap(~smNRPS)
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
smNRPS_data %>% mutate(ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
smNRPS_data %>% mutate(ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM"))
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
smNRPS_data %>% mutate(ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM"))
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent) %>% filter(ExternalID %in% analysis_hmp2_dna$ExternalID)
ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
ggscatter(smNRPS_data, x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
head(smNRPS_data)
smNRPS_data %>% filter(diagnosis == "non-IBD") %>% ggscatter(., x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
unique(smNRPS_data$diagnosis)
smNRPS_data %>% filter(diagnosis == "nonIBD") %>% ggscatter(., x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
head(smNRPS_data)
table(smNRPS_data$diagnosis)
table(analysis_hmp2_dna$diagnosis)
head(smNRPS_data)
?kw.test
kw.test?
kruskal.test?
?kruskal.test
hmp2_metadata_dna<- read_csv("HMP2-IBD/hmp2_metadata_downloaded_09_14_2018.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis, fecalcal) %>%
filter(data_type == "metagenomics")
names(hmp2_metadata_dna)[1:2] <- c("ExternalID", "ParticipantID")
hmp2_metadata_dna <- hmp2_metadata_dna%>% separate(., ExternalID, into = c("ExternalID", "extra"), sep = "_") %>% select(-c(extra))
analysis_hmp2_dna<- read_csv("HMP2-IBD/hmp2_project_metadata_2016-10-15.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis) %>%
filter(data_type == "metagenomics")
names(analysis_hmp2_dna)[1:2] <- c("ExternalID", "ParticipantID")
rainin.exact_results_DNA <- read_delim("HMP2-IBD/smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA_filter <- rainin.exact_results_DNA %>% filter(Coverage >=50)
smnrps_c_cd<-hmp2_metadata_dna %>% full_join(.,rainin.exact_results_DNA_filter, by = c("ExternalID" = "Sample"))
#%>% filter(diagnosis == "CD" | diagnosis == "nonIBD")
smNRPS_present <- smnrps_c_cd %>% filter(!is.na(fecalcal) & !is.na(bgcName)) #37 samples; 42
smNRPS_present$smNRPS <- "Present"
smNRPS_absent<-smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal)) #286; 404
smNRPS_absent$smNRPS<- "Absent"
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent) %>% filter(ExternalID %in% analysis_hmp2_dna$ExternalID)
smNRPS_data %>% filter(diagnosis == "nonIBD") %>% ggscatter(., x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
smNRPS_data %>% filter(diagnosis == "nonIBD") %>% ggscatter(., x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
head(smNRPS_data)
smNRPS_data %>% filter(diagnosis == "nonIBD")
head(smNRPS_data %>% filter(diagnosis == "nonIBD"))
table(smnrps_c_cd$data_type)
table(smnrps_c_cd$diagnosis)
smnrps_c_cd %>% distinct(ExternalID,diagnosis) %>% count(diagnosis)
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD") %>% dim()
test<-smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
unique(test$ExternalID)
unique(test$ExternalID) %>% length()
test<-smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
rm(test)
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD") %>% dim()
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
test<-smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
analysis_hmp2_dna %>% filter(ExternalID %in% test$ExternalID)
test2<-analysis_hmp2_dna %>% filter(ExternalID %in% test$ExternalID)
unique(test2$ExternalID)
unique(test2$ExternalID) %>% length()
healthy <- analysis_hmp2_dna %>% filter(diagnosis == "nonIBD")
unique(healthy$ExternalID) %>% length()
healthy <- analysis_hmp2_dna %>% filter(diagnosis == "Healthy control")
unique(healthy$ExternalID) %>% length()
hmp2_metadata_dna<- read_csv("HMP2-IBD/hmp2_metadata_downloaded_09_14_2018.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis, fecalcal) %>%
filter(data_type == "metagenomics")
names(hmp2_metadata_dna)[1:2] <- c("ExternalID", "ParticipantID")
hmp2_metadata_dna <- hmp2_metadata_dna%>% separate(., ExternalID, into = c("ExternalID", "extra"), sep = "_") %>% select(-c(extra))
analysis_hmp2_dna<- read_csv("HMP2-IBD/hmp2_project_metadata_2016-10-15.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis) %>%
filter(data_type == "metagenomics")
names(analysis_hmp2_dna)[1:2] <- c("ExternalID", "ParticipantID")
rainin.exact_results_DNA <- read_delim("HMP2-IBD/smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA_filter <- rainin.exact_results_DNA %>% filter(Coverage >=50)
smnrps_c_cd<-hmp2_metadata_dna %>% full_join(.,rainin.exact_results_DNA_filter, by = c("ExternalID" = "Sample"))
#%>% filter(diagnosis == "CD" | diagnosis == "nonIBD")
smNRPS_present <- smnrps_c_cd %>% filter(!is.na(fecalcal) & !is.na(bgcName)) #37 samples; 42
smNRPS_present$smNRPS <- "Present"
smNRPS_absent<-smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal)) #286; 404
smNRPS_absent$smNRPS<- "Absent"
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent) %>% filter(ExternalID %in% analysis_hmp2_dna$ExternalID)
smNRPS_data %>% filter(diagnosis == "nonIBD")
healthy <- analysis_hmp2_dna %>% filter(diagnosis == "Healthy control")
unique(healthy$ExternalID)
healthy %>% filter( !ExternalID %in% healthy$ExternalID)
healthy %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
missing <- healthy %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(ExternalID %in% missing$ExternalID )
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)%>% filter(ExternalID %in% missing$ExternalID )
missing_data<-smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)%>% filter(ExternalID %in% missing$ExternalID )
unique(missing_data$ExternalID)
unique(missing_data$ExternalID) %>% length()
missing %>% filter(!ExternalID %in% missing_data$ExternalID)
rainin.exact_results_DNA %>% filter(Sample == "MSM9VZMQ")
rainin.exact_results_DNA %>% filter(Sample == "HSM7CYYZ")
rainin.exact_results_DNA %>% filter(Sample == "HSM7CYYZ")
rainin.exact_results_DNA %>% filter(Sample == "HSM5MD6G")
require(tidyverse)
hmp2_metadata_dna<- read_csv("HMP2-IBD/hmp2_metadata_downloaded_09_14_2018.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis, fecalcal) %>%
filter(data_type == "metagenomics")
names(hmp2_metadata_dna)[1:2] <- c("ExternalID", "ParticipantID")
hmp2_metadata_dna <- hmp2_metadata_dna%>% separate(., ExternalID, into = c("ExternalID", "extra"), sep = "_") %>% select(-c(extra))
analysis_hmp2_dna<- read_csv("HMP2-IBD/hmp2_project_metadata_2016-10-15.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis) %>%
filter(data_type == "metagenomics")
names(analysis_hmp2_dna)[1:2] <- c("ExternalID", "ParticipantID")
rainin.exact_results_DNA <- read_delim("HMP2-IBD/smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA_filter <- rainin.exact_results_DNA %>% filter(Coverage >=50)
smnrps_c_cd<-hmp2_metadata_dna %>% full_join(.,rainin.exact_results_DNA_filter, by = c("ExternalID" = "Sample"))
#%>% filter(diagnosis == "CD" | diagnosis == "nonIBD")
smNRPS_present <- smnrps_c_cd %>% filter(!is.na(fecalcal) & !is.na(bgcName)) #37 samples; 42
smNRPS_present$smNRPS <- "Present"
smNRPS_absent<-smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal)) #286; 404
smNRPS_absent$smNRPS<- "Absent"
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent) %>% filter(ExternalID %in% analysis_hmp2_dna$ExternalID)
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
smNRPS_data %>% filter(diagnosis == "nonIBD") %>% ggscatter(., x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
hmp2_metadata_dna %>% filter(ExternalID == "MSM9VZMQ")
hmp2_metadata_dna %>% filter(ExternalID == "HSM7CYYZ")
hmp2_metadata_dna %>% filter(ExternalID == "HSM5MD6G")
analysis_hmp2_dna %>% filter(ExternalID == "MSM9VZMQ")
smNRPS_data %>% filter(diagnosis == "nonIBD")  %>% ggplot(., aes(x = smNRPS, y = fecalcal)) + geom_boxplot(outlier.colour = "red") + geom_jitter(width = 0.1, alpha = 0.25)
head(smNRPS_data)
wilcox.test(fecalcal ~ diagnosis, data=., paired=T,subset = diagnosis %in% "nonIBD" )
wilcox.test(fecalcal ~ diagnosis, data=smNRPS_data, paired=T,subset = diagnosis %in% "nonIBD" )
wilcox.test(fecalcal ~ smNRPS, data=smNRPS_data, paired=T,subset = diagnosis %in% "nonIBD" )
smNRPS_data %>% filter(diagnosis == "nonIBD")
kruskal.test(fecalcal ~ smNRPS, data = smNRPS_data %>% filter(diagnosis == "nonIBD"))
kruskal.test(fecalcal ~ smNRPS, data = smNRPS_data %>% filter(diagnosis == "nonIBD"))
smNRPS_data$smNRPS <- as.factor(smNRPS_data$smNRPS)
kruskal.test(fecalcal ~ smNRPS, data = smNRPS_data %>% filter(diagnosis == "nonIBD"))
smNRPS_data %>% filter(diagnosis == "nonIBD")  %>% mutate(., log2RPKM = log2(RPKM)) %>% ggscatter(., x = "fecalcal", y = "log2RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "log2RPKM")
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
smNRPS_data %>% filter(diagnosis == "nonIBD")  %>% mutate(., log2RPKM = log2(RPKM)) %>% ggscatter(., x = "fecalcal", y = "log2RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "log2RPKM")
smNRPS_data %>% filter(diagnosis == "nonIBD")  %>% mutate(., log10RPKM = log10(RPKM)) %>% ggscatter(., x = "fecalcal", y = "log10RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "log10RPKM")
?pheatmap
knitr::opts_chunk$set(echo = TRUE)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
library(tidyverse)
library(ggsci)
library(psych)
library(reshape2)
library(ggpubr)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
rainin_df <- read_delim("smNRPS-exact-unique-reads/combined-MetaHIT_Gut-rainin-exact-unique-reads-quantifier-results.txt", delim = "\t",col_names = FALSE)%>%filter(X2 >= 50) %>% inner_join(., sample_metadata, by = c("X4"="Sample"))
names(rainin_df)[1:4] <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin_df_hitratio <- calculate_hitRatio(rainin_df, sample_metadata)
rainin_df_hitratio
head(rainin_df)
min(rainin_df$Coverage)
test<- rainin_df %>% select(c(Sample, GroupAttribute)) %>% distinct()
head(test)
table(test$GroupAttribute)
18+14_4
18+14+4
unique(rainin_df$Sample) %>% length()
rm(test)
18/21
14/127
4/71
rainin_df %>% filter(GroupAttribute == "CD") %>% distinct(Sample) %>% count()
rainin_df %>% filter(GroupAttribute == "C") %>% distinct(Sample) %>% count()
rainin_df %>% filter(GroupAttribute == "UC") %>% distinct(Sample) %>% count()
knitr::opts_chunk$set(echo = TRUE)
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, `visit_num`, sex, hispa, race,specify_race, diagnosis )
require(tidyverse)
require(ggsci)
require(psych)
require(ggpubr)
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, `visit_num`, sex, hispa, race,specify_race, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","visit_num","sex","hispa","race","specify_race", "GroupAttribute")
###################
#split metadata by omic's data
DNA.metadata<-sample_metadata %>% filter(data_type == "metagenomics")
RNA.metadata<-sample_metadata %>% filter(data_type == "metatranscriptomics")
matched_samples <-DNA.metadata %>% inner_join(.,RNA.metadata, by=c("ExternalID", "ParticipantID","visit_num","sex","hispa","race","specify_race", "GroupAttribute" ))
paste0( "Total number of Samples:", unique(matched_samples$ExternalID) %>% length())
paste0( "Total number of Participants:", unique(matched_samples$ParticipantID) %>% length())
table(matched_samples$GroupAttribute)
head(matched_samples)
matched_samples %>% select(ParticipantID, GroupAttribute) %>% distinct(ParticipantID) %>% count(GroupAttribute)
matched_samples %>% select(ParticipantID, GroupAttribute) %>% distinct() %>% count(GroupAttribute)
rainin.exact_results_DNA <- read_delim("combined-HMP2-IBD-metagenomes-rainin-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA$data_type<-"metagenomics"
# no cutoff for DNA we have an assumption that if it is detected in the RNA than it will be detected in the DNA
head(rainin.exact_results_DNA)
rainin.exact_results_RNA <- read_delim("combined-HMP2-IBD-metatranscriptomes-rainin-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_RNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
head(rainin.exact_results_RNA)
knitr::opts_chunk$set(echo = TRUE)
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
library(tidyverse)
library(ggsci)
library(psych)
library(reshape2)
library(ggpubr)
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
#Filter data by coverage
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata, by = "Sample")
# retrieve BGC class from bgcName
results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
spanish_filtered_results  %>% count(Sample)
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
#Filter data by coverage
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata, by = "Sample")
# retrieve BGC class from bgcName
results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
############################
#Group BGC Class for figure
recode_bgcClass<-function(df){
PKS <- c("t2pks","transatpks","t1pks","lantipeptide-t2pks","otherks","otherks-transatpks")
NRPS <- c("nrps","nrps-bacteriocin","nrps-ladderane","ladderane-nrps","nrps-lantipeptide","arylpolyene-nrps")
Terpene <- "terpene"
hybrid_pks_nrps<- c("nrps-t1pks","transatpks-otherks-nrps")
Others <- c("arylpolyene","other", "resorcinol","butyrolactone", "ladderane", "siderophore", "hserlactone", "bacteriocin-arylpolyene","amglyccycl","ladderane-arylpolyene")
RiPPs <- c("microcin","bacteriocin","lantipeptide","lassopeptide","bacteriocin-lantipeptide","sactipeptide", "thiopeptide","bacteriocin-proteusin", "glycocin","microcin-lassopeptide")
df$bgcClass[df$bgcClass %in% PKS ==TRUE] <- "PKS"
df$bgcClass[df$bgcClass %in% NRPS ==TRUE] <- "NRPS"
df$bgcClass[df$bgcClass == Terpene] <- "Terpene"
df$bgcClass[df$bgcClass %in% hybrid_pks_nrps ==TRUE] <- "Hybrid PKS-NRPS"
df$bgcClass[df$bgcClass %in% Others ==TRUE] <- "Others"
df$bgcClass[df$bgcClass %in% RiPPs ==TRUE] <- "RiPPs"
return(df)
}
spanish_filtered_results<-recode_bgcClass(results_df)
spanish_filtered_results%>% count(Sample)
spanish_filtered_results%>% count(Sample) %>% arrange(desc(n))
