smNRPS_data %>% filter(diagnosis == "nonIBD")
head(smNRPS_data %>% filter(diagnosis == "nonIBD"))
table(smnrps_c_cd$data_type)
table(smnrps_c_cd$diagnosis)
smnrps_c_cd %>% distinct(ExternalID,diagnosis) %>% count(diagnosis)
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD") %>% dim()
test<-smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
unique(test$ExternalID)
unique(test$ExternalID) %>% length()
test<-smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
rm(test)
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD") %>% dim()
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
test<-smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(diagnosis == "nonIBD")
analysis_hmp2_dna %>% filter(ExternalID %in% test$ExternalID)
test2<-analysis_hmp2_dna %>% filter(ExternalID %in% test$ExternalID)
unique(test2$ExternalID)
unique(test2$ExternalID) %>% length()
healthy <- analysis_hmp2_dna %>% filter(diagnosis == "nonIBD")
unique(healthy$ExternalID) %>% length()
healthy <- analysis_hmp2_dna %>% filter(diagnosis == "Healthy control")
unique(healthy$ExternalID) %>% length()
hmp2_metadata_dna<- read_csv("HMP2-IBD/hmp2_metadata_downloaded_09_14_2018.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis, fecalcal) %>%
filter(data_type == "metagenomics")
names(hmp2_metadata_dna)[1:2] <- c("ExternalID", "ParticipantID")
hmp2_metadata_dna <- hmp2_metadata_dna%>% separate(., ExternalID, into = c("ExternalID", "extra"), sep = "_") %>% select(-c(extra))
analysis_hmp2_dna<- read_csv("HMP2-IBD/hmp2_project_metadata_2016-10-15.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis) %>%
filter(data_type == "metagenomics")
names(analysis_hmp2_dna)[1:2] <- c("ExternalID", "ParticipantID")
rainin.exact_results_DNA <- read_delim("HMP2-IBD/smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA_filter <- rainin.exact_results_DNA %>% filter(Coverage >=50)
smnrps_c_cd<-hmp2_metadata_dna %>% full_join(.,rainin.exact_results_DNA_filter, by = c("ExternalID" = "Sample"))
#%>% filter(diagnosis == "CD" | diagnosis == "nonIBD")
smNRPS_present <- smnrps_c_cd %>% filter(!is.na(fecalcal) & !is.na(bgcName)) #37 samples; 42
smNRPS_present$smNRPS <- "Present"
smNRPS_absent<-smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal)) #286; 404
smNRPS_absent$smNRPS<- "Absent"
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent) %>% filter(ExternalID %in% analysis_hmp2_dna$ExternalID)
smNRPS_data %>% filter(diagnosis == "nonIBD")
healthy <- analysis_hmp2_dna %>% filter(diagnosis == "Healthy control")
unique(healthy$ExternalID)
healthy %>% filter( !ExternalID %in% healthy$ExternalID)
healthy %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
missing <- healthy %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)
smnrps_c_cd %>% filter(is.na(fecalcal) & !is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID) %>% filter(ExternalID %in% missing$ExternalID )
smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)%>% filter(ExternalID %in% missing$ExternalID )
missing_data<-smnrps_c_cd %>% filter(is.na(fecalcal) & is.na(bgcName)) %>% filter(!ExternalID %in% smNRPS_data$ExternalID)%>% filter(ExternalID %in% missing$ExternalID )
unique(missing_data$ExternalID)
unique(missing_data$ExternalID) %>% length()
missing %>% filter(!ExternalID %in% missing_data$ExternalID)
rainin.exact_results_DNA %>% filter(Sample == "MSM9VZMQ")
rainin.exact_results_DNA %>% filter(Sample == "HSM7CYYZ")
rainin.exact_results_DNA %>% filter(Sample == "HSM7CYYZ")
rainin.exact_results_DNA %>% filter(Sample == "HSM5MD6G")
require(tidyverse)
hmp2_metadata_dna<- read_csv("HMP2-IBD/hmp2_metadata_downloaded_09_14_2018.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis, fecalcal) %>%
filter(data_type == "metagenomics")
names(hmp2_metadata_dna)[1:2] <- c("ExternalID", "ParticipantID")
hmp2_metadata_dna <- hmp2_metadata_dna%>% separate(., ExternalID, into = c("ExternalID", "extra"), sep = "_") %>% select(-c(extra))
analysis_hmp2_dna<- read_csv("HMP2-IBD/hmp2_project_metadata_2016-10-15.csv",col_names = T) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis) %>%
filter(data_type == "metagenomics")
names(analysis_hmp2_dna)[1:2] <- c("ExternalID", "ParticipantID")
rainin.exact_results_DNA <- read_delim("HMP2-IBD/smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA_filter <- rainin.exact_results_DNA %>% filter(Coverage >=50)
smnrps_c_cd<-hmp2_metadata_dna %>% full_join(.,rainin.exact_results_DNA_filter, by = c("ExternalID" = "Sample"))
#%>% filter(diagnosis == "CD" | diagnosis == "nonIBD")
smNRPS_present <- smnrps_c_cd %>% filter(!is.na(fecalcal) & !is.na(bgcName)) #37 samples; 42
smNRPS_present$smNRPS <- "Present"
smNRPS_absent<-smnrps_c_cd %>% filter(!ExternalID %in%smNRPS_present$ExternalID) %>% filter(!is.na(fecalcal)) #286; 404
smNRPS_absent$smNRPS<- "Absent"
smNRPS_data <- rbind(smNRPS_present, smNRPS_absent) %>% filter(ExternalID %in% analysis_hmp2_dna$ExternalID)
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
smNRPS_data %>% filter(diagnosis == "nonIBD") %>% ggscatter(., x = "fecalcal", y = "RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "RPKM")
hmp2_metadata_dna %>% filter(ExternalID == "MSM9VZMQ")
hmp2_metadata_dna %>% filter(ExternalID == "HSM7CYYZ")
hmp2_metadata_dna %>% filter(ExternalID == "HSM5MD6G")
analysis_hmp2_dna %>% filter(ExternalID == "MSM9VZMQ")
smNRPS_data %>% filter(diagnosis == "nonIBD")  %>% ggplot(., aes(x = smNRPS, y = fecalcal)) + geom_boxplot(outlier.colour = "red") + geom_jitter(width = 0.1, alpha = 0.25)
head(smNRPS_data)
wilcox.test(fecalcal ~ diagnosis, data=., paired=T,subset = diagnosis %in% "nonIBD" )
wilcox.test(fecalcal ~ diagnosis, data=smNRPS_data, paired=T,subset = diagnosis %in% "nonIBD" )
wilcox.test(fecalcal ~ smNRPS, data=smNRPS_data, paired=T,subset = diagnosis %in% "nonIBD" )
smNRPS_data %>% filter(diagnosis == "nonIBD")
kruskal.test(fecalcal ~ smNRPS, data = smNRPS_data %>% filter(diagnosis == "nonIBD"))
kruskal.test(fecalcal ~ smNRPS, data = smNRPS_data %>% filter(diagnosis == "nonIBD"))
smNRPS_data$smNRPS <- as.factor(smNRPS_data$smNRPS)
kruskal.test(fecalcal ~ smNRPS, data = smNRPS_data %>% filter(diagnosis == "nonIBD"))
smNRPS_data %>% filter(diagnosis == "nonIBD")  %>% mutate(., log2RPKM = log2(RPKM)) %>% ggscatter(., x = "fecalcal", y = "log2RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "log2RPKM")
smNRPS_data$RPKM[is.na(smNRPS_data$RPKM)] <-0
smNRPS_data %>% filter(diagnosis == "nonIBD")  %>% mutate(., log2RPKM = log2(RPKM)) %>% ggscatter(., x = "fecalcal", y = "log2RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "log2RPKM")
smNRPS_data %>% filter(diagnosis == "nonIBD")  %>% mutate(., log10RPKM = log10(RPKM)) %>% ggscatter(., x = "fecalcal", y = "log10RPKM",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "fecalcal", ylab = "log10RPKM")
?pheatmap
knitr::opts_chunk$set(echo = TRUE)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
library(tidyverse)
library(ggsci)
library(psych)
library(reshape2)
library(ggpubr)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
rainin_df <- read_delim("smNRPS-exact-unique-reads/combined-MetaHIT_Gut-rainin-exact-unique-reads-quantifier-results.txt", delim = "\t",col_names = FALSE)%>%filter(X2 >= 50) %>% inner_join(., sample_metadata, by = c("X4"="Sample"))
names(rainin_df)[1:4] <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin_df_hitratio <- calculate_hitRatio(rainin_df, sample_metadata)
rainin_df_hitratio
head(rainin_df)
min(rainin_df$Coverage)
test<- rainin_df %>% select(c(Sample, GroupAttribute)) %>% distinct()
head(test)
table(test$GroupAttribute)
18+14_4
18+14+4
unique(rainin_df$Sample) %>% length()
rm(test)
18/21
14/127
4/71
rainin_df %>% filter(GroupAttribute == "CD") %>% distinct(Sample) %>% count()
rainin_df %>% filter(GroupAttribute == "C") %>% distinct(Sample) %>% count()
rainin_df %>% filter(GroupAttribute == "UC") %>% distinct(Sample) %>% count()
knitr::opts_chunk$set(echo = TRUE)
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, `visit_num`, sex, hispa, race,specify_race, diagnosis )
require(tidyverse)
require(ggsci)
require(psych)
require(ggpubr)
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, `visit_num`, sex, hispa, race,specify_race, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","visit_num","sex","hispa","race","specify_race", "GroupAttribute")
###################
#split metadata by omic's data
DNA.metadata<-sample_metadata %>% filter(data_type == "metagenomics")
RNA.metadata<-sample_metadata %>% filter(data_type == "metatranscriptomics")
matched_samples <-DNA.metadata %>% inner_join(.,RNA.metadata, by=c("ExternalID", "ParticipantID","visit_num","sex","hispa","race","specify_race", "GroupAttribute" ))
paste0( "Total number of Samples:", unique(matched_samples$ExternalID) %>% length())
paste0( "Total number of Participants:", unique(matched_samples$ParticipantID) %>% length())
table(matched_samples$GroupAttribute)
head(matched_samples)
matched_samples %>% select(ParticipantID, GroupAttribute) %>% distinct(ParticipantID) %>% count(GroupAttribute)
matched_samples %>% select(ParticipantID, GroupAttribute) %>% distinct() %>% count(GroupAttribute)
rainin.exact_results_DNA <- read_delim("combined-HMP2-IBD-metagenomes-rainin-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA$data_type<-"metagenomics"
# no cutoff for DNA we have an assumption that if it is detected in the RNA than it will be detected in the DNA
head(rainin.exact_results_DNA)
rainin.exact_results_RNA <- read_delim("combined-HMP2-IBD-metatranscriptomes-rainin-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_RNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
head(rainin.exact_results_RNA)
knitr::opts_chunk$set(echo = TRUE)
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
#load necessary packages
library(tidyverse)
library(ggsci)
library(psych)
library(reshape2)
library(ggpubr)
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
#Filter data by coverage
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata, by = "Sample")
# retrieve BGC class from bgcName
results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
recode_bgcClass<-function(df){
PKS <- c("t2pks","transatpks","t1pks","lantipeptide-t2pks","otherks","otherks-transatpks")
NRPS <- c("nrps","nrps-bacteriocin","nrps-ladderane","ladderane-nrps","nrps-lantipeptide","arylpolyene-nrps")
Terpene <- "terpene"
hybrid_pks_nrps<- c("nrps-t1pks","transatpks-otherks-nrps")
Others <- c("arylpolyene","other", "resorcinol","butyrolactone", "ladderane", "siderophore", "hserlactone", "bacteriocin-arylpolyene","amglyccycl","ladderane-arylpolyene")
RiPPs <- c("microcin","bacteriocin","lantipeptide","lassopeptide","bacteriocin-lantipeptide","sactipeptide", "thiopeptide","bacteriocin-proteusin", "glycocin","microcin-lassopeptide")
df$bgcClass[df$bgcClass %in% PKS ==TRUE] <- "PKS"
df$bgcClass[df$bgcClass %in% NRPS ==TRUE] <- "NRPS"
df$bgcClass[df$bgcClass == Terpene] <- "Terpene"
df$bgcClass[df$bgcClass %in% hybrid_pks_nrps ==TRUE] <- "Hybrid PKS-NRPS"
df$bgcClass[df$bgcClass %in% Others ==TRUE] <- "Others"
df$bgcClass[df$bgcClass %in% RiPPs ==TRUE] <- "RiPPs"
return(df)
}
spanish_filtered_results<-recode_bgcClass(results_df)
species_df <- read_csv("species-profiler-results/species_results-MetaHIT-spanish_UniProt.csv", col_names = T)
species_df[is.na(species_df)]<-"N/A"
species_df$PHYLUM <- ifelse(species_df$PHYLUM == "N/A", species_df$Manual_PHYLUM, species_df$PHYLUM)
species_df$ORGANISM <- ifelse(species_df$ORGANISM == "N/A", species_df$Manual_ORGANISM, species_df$ORGANISM)
species_df$PHYLUM[species_df$PHYLUM == "N/A" ] <-"Unassigned"
species_df_bgc_class <-species_df %>% separate(., BGC_NAME,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
species_recoded_bgc_results<-recode_bgcClass(species_df_bgc_class)
#Plot BGC counts per Phyla detected
species_recoded_bgc_results %>% group_by(PHYLUM,bgcClass) %>% count() %>% ggplot(.,aes(reorder(PHYLUM, n), n)) + geom_col(aes(fill = bgcClass)) + scale_fill_npg() + coord_flip()+ theme_bw()
#ggsave("BGC-counts-perclass_Phyla-barplot.eps", width = 7.3, height = 6.31, units = "in", device = "eps")
species_recoded_bgc_results %>% group_by(PHYLUM) %>% count() %>% ggplot(.,aes(reorder(PHYLUM, n), n)) + geom_col() + scale_fill_npg() + coord_flip()+ theme_bw() + xlab("Phyla") + ylab("Total BGCs detected") +geom_text(aes(label=n), vjust=0,hjust=-.5)
#ggsave("BGC-counts-perPhyla-barplot.eps", width =11, height = 6.31, units = "in", device = "eps")
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
spanish_hitratio <- calculate_hitRatio(spanish_filtered_results, sample_metadata)
rainin_df <- read_delim("smNRPS-exact-unique-reads/combined-MetaHIT_Gut-rainin-exact-unique-reads-quantifier-results.txt", delim = "\t",col_names = FALSE)%>%filter(X2 >= 50) %>% inner_join(., sample_metadata, by = c("X4"="Sample"))
names(rainin_df)[1:4] <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
#
rainin_df_hitratio <- calculate_hitRatio(rainin_df, sample_metadata)
prepare_rainin_data <- function(df, metadata_df){
missingsamples<- metadata_df %>% filter(!Sample %in% df$Sample)
df_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
i<-1
for (i in 1:nrow(missingsamples)){
sample_col <- missingsamples[i,]$Sample
df_wide[, sample_col]<-NA
i<- i+1
}
df_wide[is.na(df_wide)] <- 0
df_melt <- melt(df_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(df_melt)[2]<-"Sample"
names(df_melt)[3]<-"RPKM"
return(df_melt)
}
rainin_df_update<- prepare_rainin_data(rainin_df, sample_metadata)
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute,bgcName) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>%  ggplot(., aes(Sample,RPKM)) + geom_col()+geom_hline(aes(yintercept=ymedian), color="red", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="red", linetype="solid")+theme_pubclean()+ facet_grid(bgcName~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24"))
#ggsave("combined-smNRPS-MetaHIT-barplot.eps", width = 11, height = 5, units = "in", device = "eps")
#ggsave("combined-smNRPS-exact-unique-reads-MetaHIT-barplot.eps", width = 11, height = 5, units = "in", device = "eps")
#ggsave("combined-smNRPS-exact-unique-reads-MetaHIT-update-barplot.eps", width = 11, height = 5, units = "in", device = "eps")
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>% ggplot(., aes(Sample,RPKM)) + geom_bar(stat = "identity", aes(fill=bgcName))+ theme_pubclean()+geom_hline(aes(yintercept=ymedian), color="black", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="black", linetype="solid")+ facet_grid(~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24")) + scale_fill_npg() + coord_cartesian(ylim=c(0, 20))
#ggsave("combined-smNRPS-exact-unique-reads-MetaHIT-barplot-combined-max20.eps", width = 11, height = 5, units = "in", device = "eps")
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>% ggplot(., aes(Sample,RPKM)) + geom_bar(stat = "identity", aes(fill=bgcName))+ theme_pubclean()+geom_hline(aes(yintercept=ymedian), color="black", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="black", linetype="solid")+ facet_grid(~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24")) + scale_fill_npg()
bar_plot_per_cluster<- function(df, cluster){
plot_title <- paste0(cluster, "-","barplot",".eps")
df %>% filter(bgcName == cluster) %>% group_by(GroupAttribute) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>%  ggplot(., aes(Sample,RPKM)) + geom_col()+geom_hline(aes(yintercept=ymedian), color="red", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="red", linetype="solid")+theme_pubclean()+ facet_grid(~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + ggtitle(cluster) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24"))
#ggsave(plot_title, width = 11, height = 5, units = "in", device = "eps")
}
bar_plot_per_cluster(rainin_df_update, "smNRPS-CC" )
bar_plot_per_cluster(rainin_df_update, "smNRPS-CB" )
bar_plot_per_cluster(rainin_df_update, "smNRPS-BP" )
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
#Filter data by coverage
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata, by = "Sample")
# retrieve BGC class from bgcName
results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
head(results_df)
test<-filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F)
head(test)
min(test$clusterlen)
max(test$clusterlen)
test$clusterlen<-as.integer(test$clusterlen)
min(test$clusterlen)
max(test$clusterlen)
rm(test)
unique(results_df$bgcName) %>% length()
min(results_df$RPKM)
max(results_df$RPKM)
mean(results_df$RPKM)
sd(results_df$RPKM)
recode_bgcClass<-function(df){
PKS <- c("t2pks","transatpks","t1pks","lantipeptide-t2pks","otherks","otherks-transatpks")
NRPS <- c("nrps","nrps-bacteriocin","nrps-ladderane","ladderane-nrps","nrps-lantipeptide","arylpolyene-nrps")
Terpene <- "terpene"
hybrid_pks_nrps<- c("nrps-t1pks","transatpks-otherks-nrps")
Others <- c("arylpolyene","other", "resorcinol","butyrolactone", "ladderane", "siderophore", "hserlactone", "bacteriocin-arylpolyene","amglyccycl","ladderane-arylpolyene")
RiPPs <- c("microcin","bacteriocin","lantipeptide","lassopeptide","bacteriocin-lantipeptide","sactipeptide", "thiopeptide","bacteriocin-proteusin", "glycocin","microcin-lassopeptide")
df$bgcClass[df$bgcClass %in% PKS ==TRUE] <- "PKS"
df$bgcClass[df$bgcClass %in% NRPS ==TRUE] <- "NRPS"
df$bgcClass[df$bgcClass == Terpene] <- "Terpene"
df$bgcClass[df$bgcClass %in% hybrid_pks_nrps ==TRUE] <- "Hybrid PKS-NRPS"
df$bgcClass[df$bgcClass %in% Others ==TRUE] <- "Others"
df$bgcClass[df$bgcClass %in% RiPPs ==TRUE] <- "RiPPs"
return(df)
}
spanish_filtered_results<-recode_bgcClass(results_df)
head(spanish_filtered_results)
wilcoxon_test(spanish_filtered_results, c("C", "CD"), "greater")
wilcoxon_test<-function(df, cohort, testType){
df$GroupAttribute <-as.factor(df$GroupAttribute)
print(levels(df$GroupAttribute))
results<-df  %>% group_by(GroupAttribute) %>% count(Sample) %>% wilcox.test(n ~ GroupAttribute, data=., paired=F, alternative = testType,subset = GroupAttribute %in% cohort )
print(results)
}
#levels = "C"  "CD" "UC"
wilcoxon_test(spanish_filtered_results, c("C", "CD"), "greater") # twosided=8.806e-05/ 4.403e-05
spanish_filtered_results %>% filter(GroupAttribute %in% c("C", "CD")) %>% count(Sample)
spanish_filtered_results %>% filter(Sample == "O2.UC49.0") %>% dim()
spanish_filtered_results %>% filter(GroupAttribute %in% c("C", "CD")) %>% count(Sample)
spanish_filtered_results %>% filter(GroupAttribute %in% c("C", "CD")) %>% count(Sample) %>% inner_join(., sample_metadata)
spanish_filtered_results %>% filter(GroupAttribute %in% c("C", "CD")) %>% count(Sample) %>% inner_join(., sample_metadata) %>% group_by(GroupAttribute) %>% mutate(meanBGC = mean(n))
spanish_filtered_results %>% filter(GroupAttribute %in% c("C", "CD")) %>% count(Sample) %>% inner_join(., sample_metadata) %>% group_by(GroupAttribute) %>% mutate(meanBGC = mean(n)) %>% distinct(meanBGC, GroupAttribute)
spanish_filtered_results %>% filter(GroupAttribute %in% c("C", "UC")) %>% count(Sample) %>% inner_join(., sample_metadata) %>% group_by(GroupAttribute) %>% mutate(meanBGC = mean(n)) %>% distinct(meanBGC, GroupAttribute)
spanish_filtered_results %>% filter(GroupAttribute %in% c("C", "UC")) %>% count(Sample) %>% inner_join(., sample_metadata) %>% group_by(GroupAttribute) %>% mutate(meanBGC = mean(n)) %>% distinct(meanBGC, GroupAttribute)
wilcoxon_test(spanish_filtered_results, c("C", "UC"), "greater")#twosided=0.175, 0.08748
wilcoxon_test(spanish_filtered_results, c("C", "UC"), "equal")#twosided=0.175, 0.08748
wilcoxon_test(spanish_filtered_results, c("C", "UC"), "two.sided")#twosided=0.175, 0.08748
wilcoxon_test(spanish_filtered_results, c("C", "UC"), "greater")#twosided=0.175, 0.08748
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
#Filter data by coverage
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata, by = "Sample")
# retrieve BGC class from bgcName
results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
############################
#Group BGC Class for figure
recode_bgcClass<-function(df){
PKS <- c("t2pks","transatpks","t1pks","lantipeptide-t2pks","otherks","otherks-transatpks")
NRPS <- c("nrps","nrps-bacteriocin","nrps-ladderane","ladderane-nrps","nrps-lantipeptide","arylpolyene-nrps")
Terpene <- "terpene"
hybrid_pks_nrps<- c("nrps-t1pks","transatpks-otherks-nrps")
Others <- c("arylpolyene","other", "resorcinol","butyrolactone", "ladderane", "siderophore", "hserlactone", "bacteriocin-arylpolyene","amglyccycl","ladderane-arylpolyene")
RiPPs <- c("microcin","bacteriocin","lantipeptide","lassopeptide","bacteriocin-lantipeptide","sactipeptide", "thiopeptide","bacteriocin-proteusin", "glycocin","microcin-lassopeptide")
df$bgcClass[df$bgcClass %in% PKS ==TRUE] <- "PKS"
df$bgcClass[df$bgcClass %in% NRPS ==TRUE] <- "NRPS"
df$bgcClass[df$bgcClass == Terpene] <- "Terpene"
df$bgcClass[df$bgcClass %in% hybrid_pks_nrps ==TRUE] <- "Hybrid PKS-NRPS"
df$bgcClass[df$bgcClass %in% Others ==TRUE] <- "Others"
df$bgcClass[df$bgcClass %in% RiPPs ==TRUE] <- "RiPPs"
return(df)
}
spanish_filtered_results<-recode_bgcClass(results_df)
#############################
#load in uniprot species data collected from our species profiler
species_df <- read_csv("species-profiler-results/species_results-MetaHIT-spanish_UniProt.csv", col_names = T)
species_df[is.na(species_df)]<-"N/A"
species_df$PHYLUM <- ifelse(species_df$PHYLUM == "N/A", species_df$Manual_PHYLUM, species_df$PHYLUM)
species_df$ORGANISM <- ifelse(species_df$ORGANISM == "N/A", species_df$Manual_ORGANISM, species_df$ORGANISM)
species_df$PHYLUM[species_df$PHYLUM == "N/A" ] <-"Unassigned"
species_df_bgc_class <-species_df %>% separate(., BGC_NAME,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
species_recoded_bgc_results<-recode_bgcClass(species_df_bgc_class)
head(species_recoded_bgc_results)
table(species_recoded_bgc_results$Manual_ORGANISM)
species_recoded_bgc_results %>% group_by(PHYLUM,bgcClass) %>% count() %>% ggplot(.,aes(reorder(PHYLUM, n), n)) + geom_col(aes(fill = bgcClass)) + scale_fill_npg() + coord_flip()+ theme_bw()
species_recoded_bgc_results %>% group_by(PHYLUM,bgcClass) %>% count()
species_recoded_bgc_results %>% group_by(PHYLUM) %>% count()
956-556
12+29+4+253+84+18
400/956
lefse_CD_C <- read_delim("LEfSe-results/LDA_Effect_Size_CD_C_stricter_pvalue.txt",col_names = F, delim = "\t")
colnames(lefse_CD_C)<-c("BGC", "log(HighestMean_AllClasses)","class_discriminitive","LDA_score", "pvalue")
lefse_CD_C_discriminative_features <- lefse_CD_C %>% filter(!is.na(class_discriminitive) & !is.na(LDA_score))
table(lefse_CD_C_discriminative_features$class_discriminitive)
lefse_UC_C <- read_delim("LEfSe-results/LDA_Effect_Size_UC_C_stricter_pvalue.txt",col_names = F, delim = "\t")
colnames(lefse_UC_C)<-c("BGC", "log(HighestMean_AllClasses)","class_discriminitive","LDA_score", "pvalue")
lefse_UC_C_discriminative_features <- lefse_UC_C %>% filter(!is.na(class_discriminitive) & !is.na(LDA_score))
table(lefse_UC_C_discriminative_features$class_discriminitive)
lefse_UC_C_discriminative_features %>% filter(BGC %in% lefse_CD_C_discriminative_features$BGC)
lefse_UC_C_discriminative_features %>% filter(class_discriminitive == "UC") %>% filter(BGC %in% lefse_CD_C_discriminative_features$BGC)
quantifier_df <- read_delim("combined-MetaHIT_Gut-spanish-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
#Filter data by coverage
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
#add sample metadata to filtered quantifier dataframe
filter_quantifier_df <- filter_quantifier_df %>% inner_join(., sample_metadata, by = "Sample")
# retrieve BGC class from bgcName
results_df <- filter_quantifier_df %>% separate(., bgcName,c("sampleID", "scaffoldName", "clusterlen", "bgcClass", "software", "Coord"),sep = "__", remove = F) %>% select(-c(2:4,6:7))
############################
#Group BGC Class for figure
recode_bgcClass<-function(df){
PKS <- c("t2pks","transatpks","t1pks","lantipeptide-t2pks","otherks","otherks-transatpks")
NRPS <- c("nrps","nrps-bacteriocin","nrps-ladderane","ladderane-nrps","nrps-lantipeptide","arylpolyene-nrps")
Terpene <- "terpene"
hybrid_pks_nrps<- c("nrps-t1pks","transatpks-otherks-nrps")
Others <- c("arylpolyene","other", "resorcinol","butyrolactone", "ladderane", "siderophore", "hserlactone", "bacteriocin-arylpolyene","amglyccycl","ladderane-arylpolyene")
RiPPs <- c("microcin","bacteriocin","lantipeptide","lassopeptide","bacteriocin-lantipeptide","sactipeptide", "thiopeptide","bacteriocin-proteusin", "glycocin","microcin-lassopeptide")
df$bgcClass[df$bgcClass %in% PKS ==TRUE] <- "PKS"
df$bgcClass[df$bgcClass %in% NRPS ==TRUE] <- "NRPS"
df$bgcClass[df$bgcClass == Terpene] <- "Terpene"
df$bgcClass[df$bgcClass %in% hybrid_pks_nrps ==TRUE] <- "Hybrid PKS-NRPS"
df$bgcClass[df$bgcClass %in% Others ==TRUE] <- "Others"
df$bgcClass[df$bgcClass %in% RiPPs ==TRUE] <- "RiPPs"
return(df)
}
spanish_filtered_results<-recode_bgcClass(results_df)
ecoli_bgcs<-c("V1.UC61.0__NODE_228_length_65988_cov_4.67854__26289__nrps__ANTISMASH__39699_65988","V1.UC61.0__NODE_2273_length_12464_cov_2.76678__12464__t1pks__ANTISMASH__0_12464","V1.CD41.0__NODE_43_length_139509_cov_97.9643__53525__nrps__ANTISMASH__80787_134312","V1.UC5.0__NODE_2999_length_8272_cov_2.30449__8272__bacteriocin__ANTISMASH__0_8272", "V1.CD35.1__NODE_3185_length_6846_cov_4.30231__6846__siderophore__ANTISMASH__0_6846", "V1.CD10.0__NODE_453_length_17115_cov_2.32239__17115__siderophore__ANTISMASH__0_17115", "V1.CD18.3__NODE_40_length_166683_cov_10.5209__59165__nrps")
head(filter_quantifier_df_updated)
prepare_data<-function(df, metadata_df){
data_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
data_wide[is.na(data_wide)] <- 0
data_melt <- melt(data_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(data_melt)[2]<-"Sample"
names(data_melt)[3]<-"RPKM"
return(data_melt)
}
filter_quantifier_df_updated <- prepare_data(filter_quantifier_df, sample_metadata)
head(filter_quantifier_df_updated)
filter_quantifier_df_updated %>% filter(bgcName %in% ecoli_bgcs)
filter_quantifier_df_updated %>% filter(bgcName %in% ecoli_bgcs) %>% suppressWarnings(describeBy(., GroupAttribute))
ecoli_bgc_data<- filter_quantifier_df_updated %>% filter(bgcName %in% ecoli_bgcs)
suppressWarnings(describeBy(ecoli_bgc_data, ecoli_bgc_data$GroupAttribute))
mean(ecoli_bgc_data$RPKM)
sd(ecoli_bgc_data$RPKM)
ecoli_bgc_data<- filter_quantifier_df %>% filter(bgcName %in% ecoli_bgcs)
mean(ecoli_bgc_data$RPKM)
sd(ecoli_bgc_data$RPKM)
prop.test(x = c(18, 4), n = c(21, 71))
prop.test(x = c(18, 4), n = c(21, 71), alternative = "less")
prop.test(x = c(18, 4), n = c(21, 71), alternative = "greater")
prop.test(x = c(18, 4), n = c(21, 71), alternative = "greater",correct = T)
prop.test(x = c(18, 4), n = c(21, 71), alternative = "greater",correct = F)
knitr::opts_chunk$set(echo = TRUE)
quantifier_df <- read_delim("combined-HMP2-IBD-metagenomes-quantifier-results.txt", col_names = F, delim = "\t")
names(quantifier_df) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
filter_quantifier_df <- quantifier_df %>% filter(Coverage >= 50)  # filter by coverage
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
sample_metadata_metagenomes <- sample_metadata %>% filter(data_type == "metagenomics")
table(sample_metadata_metagenomes$GroupAttribute)
unique(sample_metadata_metagenomes$ExternalID) %>% length()
88+67+160
unique(quantifier_df$bgcName) %>% length()
lefse_CD_C <- read_delim("LEfSe-results/LDA_Effect_Size_CD_C_stricter_pvalue.txt",col_names = F, delim = "\t")
colnames(lefse_CD_C)<-c("BGC", "log(HighestMean_AllClasses)","class_discriminitive","LDA_score", "pvalue")
lefse_CD_C_discriminative_features <- lefse_CD_C %>% filter(!is.na(class_discriminitive) & !is.na(LDA_score))
table(lefse_CD_C_discriminative_features$class_discriminitive)
lefse_UC_C <- read_delim("LEfSe-results/LDA_Effect_Size_UC_C_stricter_pvalue.txt",col_names = F, delim = "\t")
colnames(lefse_UC_C)<-c("BGC", "log(HighestMean_AllClasses)","class_discriminitive","LDA_score", "pvalue")
lefse_UC_C_discriminative_features <- lefse_UC_C %>% filter(!is.na(class_discriminitive) & !is.na(LDA_score))
table(lefse_UC_C_discriminative_features$class_discriminitive)
setwd("/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/HMP2-IBD/")
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, `visit_num`, sex, hispa, race,specify_race, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","visit_num","sex","hispa","race","specify_race", "GroupAttribute")
RNA.metadata<-sample_metadata %>% filter(data_type == "metatranscriptomics")
table(RNA.metadata)
table(RNA.metadata$GroupAttribute)
prop.test(x = c(11, 1), n = c(54, 13), alternative = "greater")
prop.test(x = c(11, 1), n = c(54, 13), alternative = "greater",correct = F)
prop.test(x = c(11, 1), n = c(54, 13),correct = F)
fisher.test(x = c(11, 1), n = c(54, 13),correct = F)
TeaTasting <-
matrix(c(3, 1, 1, 3),
nrow = 2,
dimnames = list(Guess = c("Milk", "Tea"),
Truth = c("Milk", "Tea")))
TeaTasting
rm(TeaTasting)
prop.test(x = c(11, 1), n = c(54, 13))
prop.test(x = c(11, 2), n = c(54, 26))
prop.test(x = c(11, 10), n = c(54, 26))
prop.test(x = c(11, 1), n = c(54, 26))
prop.test(x = c(11, 5), n = c(54, 26))
dat2 = matrix(c(11,43,1,12), ncol=2)
dat2
fisher.test(dat2)
fisher.test(dat2,alternative = "greater")
fisher.test(dat2,simulate.p.value = T)
chisq.test(dat2,correct=F)
chisq.test(dat2,correct=T)
fisher.test(dat2)
rainin.exact_results_RNA <- read_delim("smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metatranscriptomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_RNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_RNA$data_type<-"metatranscriptomics"
rainin.exact_results_RNA %>% filter(Sample == "ESM5ME9D")
rainin.exact_results_DNA <- read_delim("smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA$data_type<-"metagenomics"
rainin.exact_results_DNA %>% filter(Sample == "ESM5ME9D")
0.577/0.0543
log10(10.6)
rainin.exact_results_DNA %>% filter(Sample == "HSM5FZBQ")
rainin.exact_results_RNA %>% filter(Sample == "HSM5FZBQ")
4.39/0.588
log(7.5)
0.588/4.39
log10(7.5)
