blast_df %>% as.data.frame()
blast_df %>% as.data.frame() %>% head()
blast_df %>% group_by(sseqid,Sample) %>% filter(duplicated(sseqid))
blast_df %>% group_by(sseqid,Sample) %>% filter(duplicated(sseqid)) %>% as.data.frame()
blast_df %>% filter(sseqid == "A201L5ABXX:3:25:16105:34822#ACTTGAA/1")
blast_df_smnrps<- blast_df %>% filter(qseqid != "smNRPS-BP")
head(blast_df_smnrps)
dim(blast_df_smnrps)
blast_df_smnrps<- blast_df %>% filter(qseqid != "smNRPS-BP") %>%  mutate(sqcovs=((pmax(sstart,send)-pmin(sstart,send))/slen )*100)
head(blast_df_smnrps)
compare_C_UC_clusters %>% filter(slen<qlen) %>% mutate(sqcovs=((pmax(sstart,send)-pmin(sstart,send))+1/slen )*100) %>% filter( sqcovs >=95)
blast_df_smnrps<- blast_df %>% filter(qseqid != "smNRPS-BP") %>%  mutate(sqcovs=((pmax(sstart,send)-pmin(sstart,send))+1/slen )*100)
head(blast_df_smnrps)
blast_df_smnrps<- blast_df %>% filter(qseqid != "smNRPS-BP") %>%  mutate(sqcovs=((pmax(sstart,send)-pmin(sstart,send)+1)/slen )*100)
head(blast_df_smnrps)
dim(blast_df_smnrps)
tail(blast_df_smnrps)
head(blast_df_smnrps %>% as.data.frame())
blast_df_smnrps %>% as.data.frame() %>% filter(sqcovs <=50)
blast_df_smnrps<- blast_df %>% filter(qseqid != "smNRPS-BP") %>%  mutate(sqcovs=((pmax(sstart,send)-pmin(sstart,send)+1)/slen )*100) %>% filter(sqcovs >=50)
head(blast_df_smnrps)
dim(blast_df_smnrps)
blast_df_smnrps %>% arrange(desc(sqcovs)) %>% tail(n=50)
blast_df <- read_delim("compare-MetaHIT-HMP2-enriched-bgcs/rainin-combined-BLAST-data.txt", col_names = T, delim= "\t")
blast_df_smnrps<- blast_df %>% filter(qseqid != "smNRPS-BP") %>%  mutate(sqcovs=((pmax(sstart,send)-pmin(sstart,send)+1)/slen )*100) %>% filter(sqcovs >=50)
filterBlastReads<-function(blastDF){
filterDF<-data.frame()
for (i in 1:nrow(blastDF)){
external <- NULL
row <- blastDF[i,]
smin <- min(row$sstart, row$send)
smax <- max(row$sstart, row$send)
qmin <- min(row$qstart, row$qend)
qmax <- max(row$qstart, row$qend)
percentReadCoveredByCluster <- ((smax - smin + 1) / (row$slen) )* 100
if(qmin - 1 >= smin - 1  && row$qlen - qmax >= row$slen - smax){
external <- TRUE
}else{
external <- FALSE}
if (external == TRUE){
if ((row$pident >= 95.0) && (percentReadCoveredByCluster>= 90)){
row$readPos <- "external"
row$readCov <- percentReadCoveredByCluster
filterDF<-rbind(row,filterDF )
}} else if (external == FALSE){
if ((row$pident >= 95.0) && (percentReadCoveredByCluster>= 50)){
row$readPos <- "edge"
row$readCov <- percentReadCoveredByCluster
filterDF<-rbind(row,filterDF )}}
}
return(filterDF)
}
blast_df_filter<-filterBlastReads( blast_df %>% filter(qseqid != "smNRPS-BP"))
dim(blast_df_filter)
dim(blast_df)
blast_df %>% filter(qseqid != "smNRPS-BP") %>% dim(.)
head(blast_df_filter)
blast_df_filter%>% filter(readPos == "internal")
blast_df_filter%>% filter(readPos == "edge")
blast_df_filter%>% filter(readPos == "external")
unique(blast_df_filter$qseqid)
blast_df_filter_count<-blast_df_filter %>% group_by(sseqid) %>% count()
head(blast_df_filter_count)
max(blast_df_filter_count$n)
blast_df_filter_count %>% filter(n ==2 ) %>% dim(.)
dim(blast_df_filter_count)
11363/34211
blast_df_filter %>% group_by(sseqid == "A200FVABXX:2:1:16316:24208#GCCAAT/2")
blast_df_filter %>% group_by(sseqid == "A200FVABXX:2:1:16316:24208#GCCAAT/2")
blast_df_filter %>% filter(sseqid == "A200FVABXX:2:1:16316:24208#GCCAAT/2")
head(blast_df_filter_count)
blast_df_filter %>% filter(sseqid == "A200FVABXX:2:1:13876:140816#GCCAAT/1")
dim(blast_df_filter)
unique(blast_df_filter$sseqid) %>% length()
blast_df_filter %>% filter(sseqid == "A200FVABXX:2:1:16316:24208#GCCAAT/2")
head(blast_df_filter_count)
head(blast_df_filter_count, 10)
blast_df_filter %>% filter(sseqid == "A200FVABXX:2:1:19449:192141#GCCAAT/2")
head(blast_df_filter_count)
blast_df_filter_count<-blast_df_filter %>% group_by(sseqid) %>% count()%>% filter(n==2) #11363/34211 ~33%
dim(blast_df_filter_count)
blast_df_filter_dups <- blast_df_filter %>% filter(sseqid %in% blast_df_filter_count$sseqid)
unique(blast_df_filter_dups$sseqid)
dim(blast_df_filter_dups)
22726/2
head(blast_df_filter_dups)
blast_df_filter_dups %>%group_by(sseqid) %>% mutate(diff = max(pident) - min(pident)) %>% head()
test <-blast_df_filter_dups %>%group_by(sseqid) %>% mutate(diff = max(pident) - min(pident))
head(test)
as.data.frame(test)
test %>% as.data.frame() %>% head()
hist(test$diff)
max(test$diff)
test %>% filter(diff == 5) %>% as.data.frame()
test %>% filter(diff == 0) %>% dim()
test %>% filter(diff == 0) %>% distinct(sseqid) %>% dim()
1100/34211
0.0321534 *100
test %>% filter(sseqid == "B201LRABXX:4:46:13174:110695#GCCAATA/2 ")
test %>% filter(sseqid == "B201LRABXX:4:46:13174:110695#GCCAATA/2")
head(blast_df_filter_dups)
blast_df_filter_dups %>% as.data.frame() %>% head()
test %>% filter(sseqid == "FC615DRAAXX:2:102:6399:8570#0/1")
test %>% filter(sseqid == "FC615DRAAXX:2:34:5938:8226#0/2")
tail(blast_df_filter_dups)
tail(blast_df_filter_dups) %>% as.data.frame()
test %>% filter(sseqid == "A201L5ABXX:3:22:6611:13881#ACTTGAA/1")
compare_UC_clusters
require(tidyverse)
compare_C_clusters <- read_delim("compare-MetaHIT-HMP2-enriched-bgcs/compare-enriched-C_against-CD",
col_names = F, delim = "\t")
names(compare_C_clusters)<- c("sseqid", "qseqid", "slen","qlen", "qcovs", "pident", "evalue", "bitscore", "qstart", "qend", "sstart", "send")
compare_C_clusters %>% filter(qlen<slen) %>% filter(qcovs >=95 )
compare_C_clusters %>% filter(qlen<slen) %>% filter(qcovs >=95 ) %>% as.data.frame()
compare_C_clusters %>% filter(slen<qlen)
compare_C_clusters %>% filter(slen<qlen) %>% as.data.frame()
compare_C_clusters %>% filter(qlen<slen)
compare_C_clusters %>% filter(slen<qlen) %>% as.data.frame()
compare_C_clusters %>% filter(slen<qlen) %>% mutate(sqcovs=((pmax(sstart,send)-pmin(sstart,send))/slen )*100) %>% filter( sqcovs >=95)
compare_C_clusters %>% filter(slen<qlen) %>% mutate(sqcovs=((pmax(sstart,send)-pmin(sstart,send))/slen )*100)
compare_CD_clusters <- read_delim("compare-MetaHIT-HMP2-enriched-bgcs/compare-enriched-CD_against-C",
col_names = F, delim = "\t")
names(compare_CD_clusters)<- c("sseqid", "qseqid", "slen","qlen", "qcovs", "pident", "evalue", "bitscore", "qstart", "qend", "sstart", "send")
compare_CD_clusters %>% filter(qlen<slen) %>% filter(qcovs >=95 )
compare_CD_clusters %>% filter(qlen<slen) %>% filter(qcovs >=95 ) %>% as.data.frame()
compare_CD_clusters %>% filter(slen<qlen) %>% mutate(sqcovs=((pmax(sstart,send)-pmin(sstart,send))/slen )*100) %>% filter( sqcovs >=95)
compare_CD_clusters %>% filter(slen<qlen)
26002-7325
18677/26002
compare_CD_clusters %>% filter(qlen<slen)
compare_CD_clusters
compare_CD_clusters %>% as.data.frame()
32618-13950
18668/26002
25485-10662
14823/26002
26002-11170
14832/26002
compare_UC_clusters <- read_delim("compare-MetaHIT-HMP2-enriched-bgcs/compare-enriched-UC_against-C",
col_names = F, delim = "\t")
compare_UC_clusters
compare_C_UC_clusters <- read_delim("compare-MetaHIT-HMP2-enriched-bgcs/compare-enriched-C_against-UC",
col_names = F, delim = "\t")
names(compare_C_UC_clusters)<- c("sseqid", "qseqid", "slen","qlen", "qcovs", "pident", "evalue", "bitscore", "qstart", "qend", "sstart", "send")
compare_C_UC_clusters %>% filter(qlen<slen)
compare_C_UC_clusters %>% filter(qlen<slen) %>% as.data.frame()
compare_C_UC_clusters %>% filter(qlen<slen) %>% as.data.frame()
compare_C_UC_clusters %>% filter(slen<qlen)
blast_df <- read_delim("compare-MetaHIT-HMP2-enriched-bgcs/rainin-combined-BLAST-data.txt", col_names = T, delim= "\t")
filterBlastReads<-function(blastDF){
filterDF<-data.frame()
for (i in 1:nrow(blastDF)){
external <- NULL
row <- blastDF[i,]
smin <- min(row$sstart, row$send)
smax <- max(row$sstart, row$send)
qmin <- min(row$qstart, row$qend)
qmax <- max(row$qstart, row$qend)
percentReadCoveredByCluster <- ((smax - smin + 1) / (row$slen) )* 100
if(qmin - 1 >= smin - 1  && row$qlen - qmax >= row$slen - smax){
external <- TRUE
}else{
external <- FALSE}
if (external == TRUE){
if ((row$pident >= 95.0) && (percentReadCoveredByCluster>= 90)){
row$readPos <- "external"
row$readCov <- percentReadCoveredByCluster
filterDF<-rbind(row,filterDF )
}} else if (external == FALSE){
if ((row$pident >= 95.0) && (percentReadCoveredByCluster>= 50)){
row$readPos <- "edge"
row$readCov <- percentReadCoveredByCluster
filterDF<-rbind(row,filterDF )}}
}
return(filterDF)
}
blast_df_filter<-filterBlastReads( blast_df %>% filter(qseqid != "smNRPS-BP"))
head(blast_df)
blast_df <- read_delim("compare-MetaHIT-HMP2-enriched-bgcs/rainin-combined-BLAST-data.txt", col_names = T, delim= "\t")
head(blast_df)
dim(blast_df)
tail(blast_df)
blast_df %>% filter(sstart !=1 | send !=1)
blast_df %>% filter(sstart !=1 & send !=1)
blast_df %>% filter(sstart !=1 & send !=1) %>% as.data.frame()
blast_df %>% filter(sstart ==1 | send ==1) %>% as.data.frame()
blast_df %>% filter(sstart ==1 | send ==1) %>% as.data.frame() %>% dim()
blast_df %>% filter(sstart !=1 & send !=1) %>% dim()
44587+3676
compare BLAST reads that mapped to our smNRPS-clusters
blast_df <- read_delim("compare-MetaHIT-HMP2-enriched-bgcs/rainin-combined-BLAST-data.txt", col_names = T, delim= "\t")
filterBlastReads<-function(blastDF){
filterDF<-data.frame()
for (i in 1:nrow(blastDF)){
internal <- NULL
row <- blastDF[i,]
smin <- min(row$sstart, row$send)
smax <- max(row$sstart, row$send)
qmin <- min(row$qstart, row$qend)
qmax <- max(row$qstart, row$qend)
percentReadCoveredByCluster <- NULL
if(smin ==1){
percentReadCoveredByCluster <- ((smax - smin + 1) / (row$slen) )* 100
} else{
percentReadCoveredByCluster <- ((smax - smin) / (row$slen) )* 100
}
if(qmin - 1 >= smin - 1  && row$qlen - qmax >= row$slen - smax){
internal <- TRUE
}else{
internal <- FALSE}
if (internal == TRUE){
if ((row$pident >= 95.0) && (percentReadCoveredByCluster>= 90)){
row$readPos <- "internal"
row$readCov <- percentReadCoveredByCluster
filterDF<-rbind(row,filterDF )
}} else if (internal == FALSE){
if ((row$pident >= 95.0) && (percentReadCoveredByCluster>= 50)){
row$readPos <- "edge"
row$readCov <- percentReadCoveredByCluster
filterDF<-rbind(row,filterDF )}}
}
return(filterDF)
}
blast_df_filter<-filterBlastReads( blast_df %>% filter(qseqid != "smNRPS-BP"))
head(blast_df_filter)
blast_df_filter_count<-blast_df_filter %>% group_by(sseqid) %>% count()%>% filter(n==2)
dim(blast_df_filter_count)
head(blast_df_filter)
blast_df_filter %>% filter(readCov == 50) %>% head()
86-43
44/86
blast_df <- read_delim("compare-MetaHIT-HMP2-enriched-bgcs/rainin-combined-BLAST-data.txt", col_names = T, delim= "\t")
filterBlastReads<-function(blastDF){
filterDF<-data.frame()
for (i in 1:nrow(blastDF)){
internal <- NULL
row <- blastDF[i,]
smin <- min(row$sstart, row$send)
smax <- max(row$sstart, row$send)
qmin <- min(row$qstart, row$qend)
qmax <- max(row$qstart, row$qend)
percentReadCoveredByCluster <- ((smax - smin + 1) / (row$slen) )* 100
if(qmin - 1 >= smin - 1  && row$qlen - qmax >= row$slen - smax){
internal <- TRUE
}else{
internal <- FALSE}
if (internal == TRUE){
if ((row$pident >= 95.0) && (percentReadCoveredByCluster>= 90)){
row$readPos <- "internal"
row$readCov <- percentReadCoveredByCluster
filterDF<-rbind(row,filterDF )
}} else if (internal == FALSE){
if ((row$pident >= 95.0) && (percentReadCoveredByCluster>= 50)){
row$readPos <- "edge"
row$readCov <- percentReadCoveredByCluster
filterDF<-rbind(row,filterDF )}}
}
return(filterDF)
}
blast_df_filter<-filterBlastReads( blast_df %>% filter(qseqid != "smNRPS-BP"))
blast_df_filter_count<-blast_df_filter %>% group_by(sseqid) %>% count()%>% filter(n==2) #11363/34211 ~33%
blast_df_filter_dups <- blast_df_filter %>% filter(sseqid %in% blast_df_filter_count$sseqid)
blast_df_filter_dups_max <-blast_df_filter_dups %>% group_by(sseqid) %>% top_n(1, max(pident))
unique(blast_df_filter_dups_max$sseqid) %>% length()
dim(blast_df_filter_dups_max)
head(blast_df_filter_dups_max)
head(blast_df_filter_dups)
dim(blast_df_filter_dups)
blast_df_filter_count<-blast_df_filter %>% group_by(sseqid) %>% count()%>% filter(n==2) %>% ungroup()#11363/34211 ~33%
blast_df_filter_dups <- blast_df_filter %>% filter(sseqid %in% blast_df_filter_count$sseqid)
blast_df_filter_dups_max <-blast_df_filter_dups %>% group_by(sseqid) %>% top_n(1, max(pident))
test <-blast_df_filter_dups %>%group_by(sseqid) %>% mutate(diff = max(pident) - min(pident))
hist(test$diff)
test %>% filter(diff == 5 )
blast_df_filter_dups_max %>% filter(sseqid == "FC615DRAAXX:3:7:2654:8412#0/2")
blast_df_filter_dups_max <-blast_df_filter_dups %>% group_by(sseqid) %>% top_n(1,pident)
blast_df_filter_dups_max %>% filter(sseqid == "FC615DRAAXX:3:7:2654:8412#0/2")
dim(blast_df_filter_dups_max)
unique(blast_df_filter_dups_max$sseqid) %>% length()
12463-11363
test %>% filter(diff == 0) %>% dim()
test %>% filter(diff == 0) %>% head()
blast_df_filter_dups_max <-blast_df_filter_dups %>% group_by(sseqid) %>% top_n(1,pident) %>% top_n(1,evalue)
head(blast_df_filter_dups_max)
blast_df_filter_dups_max %>% filter(sseqid == "I326_1_FC30VYFAAXX:4:35:1133:1081/2")
4.96e-17<5.02e-17
head(rank)
blast_df_filter_dups_max <-blast_df_filter_dups %>% group_by(sseqid) %>% top_n(1,pident) %>% mutate(rank = rank(evalue, ties.method = "min"))
head(blast_df_filter_dups_max)
blast_df_filter_dups_max <-blast_df_filter_dups %>% group_by(sseqid) %>% top_n(1,pident) %>% mutate(rank = rank(evalue, ties.method = "min"))%>% filter(rank == 1)
dim(blast_df_filter_dups_max)
dim(test)
22726/2
head(blast_df_filter_dups_max)
rm(test)
head(blast_df_filter_dups_max)
blast_df_filter_dups %>% head()
blast_df_filter_dups %>% filter(sseqid == "FC615DRAAXX:2:34:5938:8226#0/2")
blast_df_filter_dups_max %>% filter(sseqid == "FC615DRAAXX:2:34:5938:8226#0/2")
head(blast_df_filter_dups_max)
dim(blast_df_filter_dups_max)
blast_df_filter_dups_max %>% group_by(qseqid,Sample) %>% count() %>% ggplot(x=Sample, y=n) +geom_col() + facet_wrap(~qseqid)
blast_df_filter_dups_max %>% group_by(qseqid,Sample) %>% count() %>% ggplot(aes(x=Sample, y=n)) +geom_col() + facet_wrap(~qseqid)
dim(blast_df_filter_dups_max)
table(blast_df_filter_dups_max$qseqid)
blast_df_filter_dups_max %>% filter(duplicated(sseqid))
head(blast_df_filter_dups_max)
blast_df_filter_dups_max %>% dim()
unique(blast_df_filter_dups_max$sseqid) %>% length()
blast_df_filter_dups_max %>% select(c(-rank, -readPos,-readCov)) %>% head()
write_delim(blast_df_filter_dups_max %>% select(c(-rank, -readPos,-readCov)), "smNRPS-MetaHIT-mapped-filter-reads.txt", delim = "\t")
load("/Users/francinecamacho/Documents/Donia_analysis/HMP-published-metaBGC/hmm-reads-price/TcmN-v2-model/TcmN-hmm_unique-BLAST-HMP-results.RData")
sample_smnrps_df <- read_delim("smNRPS-MetaHIT-mapped-filter-reads.txt", col_names = T, delim = "\t")
paste0("Rainin-clusters-exact-unique-reads-vs-","V1.CD10.0","-tabular-blast", ".txt", sep="")
paste0("smNRPS-exact-unique-reads-vs-","V1.CD10.0","-tabular-blast", ".txt", sep="")
sample_smnrps_df <- read_delim("smNRPS-MetaHIT-mapped-filter-reads.txt", col_names = T, delim = "\t")
parseReadID<- function(df){
setwd("/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/smNRPS-exact-unique-reads")
samples<-unique(df$Sample)
for (s in 1:length(samples)){
currentSample<-samples[s]
currentSampleResults<- df %>% filter(Sample == currentSample)
fileName<-paste0("smNRPS-exact-unique-reads-vs-",currentSample,"-tabular-blast", ".txt", sep="")
write_delim(currentSampleResults,fileName, delim="\t", col_names = F )
}}
parseReadID(sample_smnrps_df)
unique(sample_smnrps_df$Sample) %>% length()
sample_smnrps_df <- read_delim("smNRPS-MetaHIT-mapped-filter-reads.txt", col_names = T, delim = "\t")
parseReadID<- function(df){
setwd("/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/smNRPS-exact-unique-reads")
samples<-unique(df$Sample)
for (s in 1:length(samples)){
currentSample<-samples[s]
currentSampleResults<- df %>% filter(Sample == currentSample)
fileName<-paste0("smNRPS-exact-unique-reads-vs-",currentSample,"-tabular-blast", ".txt", sep="")
write_delim(currentSampleResults %>% select(-c(Sample)),fileName, delim="\t", col_names = F )
}}
parseReadID(sample_smnrps_df)
sample_smnrps_df <- read_delim("smNRPS-exact-unique-reads/smNRPS-MetaHIT-mapped-filter-reads.txt", col_names = T, delim = "\t")
require(tidyverse)
sample_smnrps_df <- read_delim("smNRPS-exact-unique-reads/smNRPS-MetaHIT-mapped-filter-reads.txt", col_names = T, delim = "\t")
sample_smnrps_df <- read_delim("smNRPS-exact-unique-reads/smNRPS-MetaHIT-mapped-filter-reads.txt", col_names = T, delim = "\t")
sample_smnrps_df <- read_delim("smNRPS-MetaHIT-mapped-filter-reads.txt", col_names = T, delim = "\t")
head(sample_smnrps_df)
knitr::opts_chunk$set(echo = TRUE)
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
rainin_df <- read_delim("smNRPS-exact-unique-reads/combined-MetaHIT_Gut-rainin-exact-unique-reads-quantifier-results.txt", delim = "\t",col_names = FALSE)%>%filter(X2 >= 50) %>% inner_join(., sample_metadata, by = c("X4"="Sample"))
names(rainin_df)[1:4] <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin_df_hitratio <- calculate_hitRatio(rainin_df, sample_metadata)
rainin_df_hitratio
prepare_rainin_data <- function(df, metadata_df){
missingsamples<- metadata_df %>% filter(!Sample %in% df$Sample)
df_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
i<-1
for (i in 1:nrow(missingsamples)){
sample_col <- missingsamples[i,]$Sample
df_wide[, sample_col]<-NA
i<- i+1
}
df_wide[is.na(df_wide)] <- 0
df_melt <- melt(df_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(df_melt)[2]<-"Sample"
names(df_melt)[3]<-"RPKM"
return(df_melt)
}
rainin_df_update<- prepare_rainin_data(rainin_df, sample_metadata)
library(reshape2)
prepare_rainin_data <- function(df, metadata_df){
missingsamples<- metadata_df %>% filter(!Sample %in% df$Sample)
df_wide <- dcast(df, bgcName ~ Sample, value.var="RPKM")
i<-1
for (i in 1:nrow(missingsamples)){
sample_col <- missingsamples[i,]$Sample
df_wide[, sample_col]<-NA
i<- i+1
}
df_wide[is.na(df_wide)] <- 0
df_melt <- melt(df_wide) %>%  mutate_if(is.factor, as.character) %>% inner_join(.,metadata_df, by = c("variable"="Sample") )
names(df_melt)[2]<-"Sample"
names(df_melt)[3]<-"RPKM"
return(df_melt)
}
rainin_df_update<- prepare_rainin_data(rainin_df, sample_metadata)
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>% ggplot(., aes(Sample,RPKM)) + geom_bar(stat = "identity", aes(fill=bgcName))+ theme_pubclean()+geom_hline(aes(yintercept=ymedian), color="black", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="black", linetype="solid")+ facet_grid(~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24")) + scale_fill_npg() + coord_cartesian(ylim=c(0, 20))
library(ggpubr)
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>% ggplot(., aes(Sample,RPKM)) + geom_bar(stat = "identity", aes(fill=bgcName))+ theme_pubclean()+geom_hline(aes(yintercept=ymedian), color="black", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="black", linetype="solid")+ facet_grid(~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24")) + scale_fill_npg() + coord_cartesian(ylim=c(0, 20))
library(ggsci)
rainin_df_update %>% filter(bgcName !="smNRPS-BP") %>% group_by(GroupAttribute) %>% mutate(ymean= mean(RPKM)) %>% mutate(ymedian= median(RPKM)) %>% ggplot(., aes(Sample,RPKM)) + geom_bar(stat = "identity", aes(fill=bgcName))+ theme_pubclean()+geom_hline(aes(yintercept=ymedian), color="black", linetype="dashed")+geom_hline(aes(yintercept=ymean), color="black", linetype="solid")+ facet_grid(~GroupAttribute, switch= "x",scales = "free_x", space = "free_x") + xlab("Disease")+  theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + theme(plot.title = element_text(hjust = 0.5,face = "bold",size = "24")) + scale_fill_npg() + coord_cartesian(ylim=c(0, 20))
rainin_df <- read_delim("combined-MetaHIT_Gut-rainin-quantifier-results.txt", delim = "\t",col_names = FALSE)%>%filter(X2 >= 50) %>% inner_join(., sample_metadata, by = c("X4"="Sample"))
names(rainin_df)[1:4] <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
######################
rainin_df_hitratio <- calculate_hitRatio(rainin_df, sample_metadata)
rainin_df_hitratio
sample_metadata <- read_csv("sample_metadata.csv", col_names = T) # load metadata
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
rainin_df <- read_delim("combined-MetaHIT_Gut-rainin-quantifier-results.txt", delim = "\t",col_names = FALSE)%>%filter(X2 >= 50) %>% inner_join(., sample_metadata, by = c("X4"="Sample"))
names(rainin_df)[1:4] <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin_df_hitratio <- calculate_hitRatio(rainin_df, sample_metadata)
rainin_df_hitratio
rainin_df <- read_delim("smNRPS-exact-unique-reads/combined-MetaHIT_Gut-rainin-exact-unique-reads-quantifier-results.txt", delim = "\t",col_names = FALSE)%>%filter(X2 >= 50) %>% inner_join(., sample_metadata, by = c("X4"="Sample"))
names(rainin_df)[1:4] <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
#####################################
rainin_df_hitratio <- calculate_hitRatio(rainin_df, sample_metadata)
rainin_df_hitratio
knitr::opts_chunk$set(echo = TRUE)
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","GroupAttribute")
sample_metadata_metagenomes <- sample_metadata %>% filter(data_type == "metagenomics")
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
knitr::opts_chunk$set(echo = TRUE)
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, `visit_num`, sex, hispa, race,specify_race, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","visit_num","sex","hispa","race","specify_race", "GroupAttribute")
DNA.metadata<-sample_metadata %>% filter(data_type == "metagenomics")
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
setwd("/Users/francinecamacho/Documents/Donia_analysis/smNRPS-manuscript/smNRPS-Crohns/data/HMP2-IBD/")
sample_metadata<-read_csv("hmp2_project_metadata_2016-10-15.csv", col_names = TRUE) %>% select(., `External ID`, `Participant ID`,`data_type`, `visit_num`, sex, hispa, race,specify_race, diagnosis )
colnames(sample_metadata)<- c("ExternalID", "ParticipantID", "data_type","visit_num","sex","hispa","race","specify_race", "GroupAttribute")
###################
#split metadata by omic's data
DNA.metadata<-sample_metadata %>% filter(data_type == "metagenomics")
RNA.metadata<-sample_metadata %>% filter(data_type == "metatranscriptomics")
#################
#how many samples/participants are matched for DNA and RNA analyses?
matched_samples <-DNA.metadata %>% inner_join(.,RNA.metadata, by=c("ExternalID", "ParticipantID","visit_num","sex","hispa","race","specify_race", "GroupAttribute" ))
paste0( "Total number of Samples:", unique(matched_samples$ExternalID) %>% length())
paste0( "Total number of Participants:", unique(matched_samples$ParticipantID) %>% length())
rainin.exact_results_DNA <- read_delim("smNRPS-exact-unique-reads-HMP2-IBD/combined-HMP2-IBD-metagenomes-rainin-exact-unique-reads-quantifier-results.txt", col_names = F, delim = "\t")
names(rainin.exact_results_DNA) <- c("bgcName", "Coverage", "RPKM", "Sample") # add column names
rainin.exact_results_DNA$data_type<-"metagenomics"
# no cutoff for DNA we have an assumption that if it is detected in the RNA than it will be detected in the DNA
calculate_hitRatio <-function(data, metadata){
metadata_counts<- metadata %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$n
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (n/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
rainin.exact_results_DNA_filter<- rainin.exact_results_DNA %>% filter(Coverage >=50)%>% inner_join(.,DNA.metadata%>% select(-c(3,10)), by = c("Sample"= "ExternalID"))
rainin_df_hitratio <- calculate_hitRatio(rainin.exact_results_DNA_filter, DNA.metadata)
rainin_df_hitratio
calculate_hitRatio_byPart <-function(data, metadata){
metadata_counts<- metadata %>% group_by(ParticipantID,GroupAttribute) %>% count() %>% ungroup() %>% group_by(GroupAttribute) %>% count() %>% ungroup()
bgc_counts <- data %>% group_by(bgcName,GroupAttribute,ParticipantID) %>% count() %>% ungroup() %>% group_by(bgcName,GroupAttribute) %>% count() %>% ungroup()
hitRatio_df <- data.frame() # intialize results df
for (i in 1:nrow(metadata_counts)){
diseaseStatus <- metadata_counts[i,]$GroupAttribute
diseaseStatus_count <- metadata_counts[i,]$nn
disease_hitratio <- bgc_counts %>% filter(GroupAttribute == diseaseStatus) %>%  mutate(., hitRatio = case_when(GroupAttribute == diseaseStatus ~ (nn/diseaseStatus_count)*100))
hitRatio_df<-rbind(hitRatio_df,disease_hitratio)
}
return(hitRatio_df)
}
rainin.exact_results_DNA_filter<- rainin.exact_results_DNA %>% filter(Coverage >=50)%>% inner_join(.,DNA.metadata%>% select(-c(3,10)), by = c("Sample"= "ExternalID"))
rainin_df_hitratio <- calculate_hitRatio(rainin.exact_results_DNA_filter, DNA.metadata)
rainin_df_hitratiobyPart <- calculate_hitRatio_byPart(rainin.exact_results_DNA_filter, DNA.metadata)
rainin_df_hitratiobyPart
